//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 2.000000, 0, 0, 0},
                              { 1.414214, 1.414214, 0, 0},
                              { 0, 2.000000, 0, 0},
                              { -1.414214, 1.414214, 0, 0},
                              { -2.000000, 0, 0, 0},
                              { -1.414212, -1.414214, 0, 0},
                              { 0, -2.000000, 0, 0},
                              { 1.414214, -1.414214, 0, 0},
                              { 4.000000, 0, 0, 0},
                              { 3.695520, 1.530732, 0, 0},
                              { 2.828428, 2.828428, 0, 0},
                              { 1.530732, 3.695520, 0, 0},
                              { 0, 4.000000, 0, 0},
                              { -1.530736, 3.695516, 0, 0},
                              { -2.828428, 2.828428, 0, 0},
                              { -3.695520, 1.530732, 0, 0},
                              { -4.000000, 0, 0, 0},
                              { -3.695516, -1.530736, 0, 0},
                              { -2.828424, -2.828428, 0, 0},
                              { -1.530732, -3.695520, 0, 0},
                              { 0, -4.000000, 0, 0},
                              { 1.530736, -3.695516, 0, 0},
                              { 2.828428, -2.828428, 0, 0},
                              { 3.695520, -1.530732, 0, 0},
                              { 6.000000, 0, 0, 0},
                              { 5.795556, 1.552914, 0, 0},
                              { 5.196150, 3.000000, 0, 0},
                              { 4.242642, 4.242642, 0, 0},
                              { 3.000000, 5.196156, 0, 0},
                              { 1.552914, 5.795556, 0, 0},
                              { 0, 6.000000, 0, 0},
                              { -1.552914, 5.795556, 0, 0},
                              { -3.000000, 5.196150, 0, 0},
                              { -4.242642, 4.242642, 0, 0},
                              { -5.196156, 3.000000, 0, 0},
                              { -5.795556, 1.552914, 0, 0},
                              { -6.000000, 0, 0, 0},
                              { -5.795556, -1.552920, 0, 0},
                              { -5.196150, -3.000000, 0, 0},
                              { -4.242636, -4.242642, 0, 0},
                              { -2.999994, -5.196156, 0, 0},
                              { -1.552914, -5.795556, 0, 0},
                              { 0, -6.000000, 0, 0},
                              { 1.552914, -5.795556, 0, 0},
                              { 3.000000, -5.196150, 0, 0},
                              { 4.242642, -4.242642, 0, 0},
                              { 5.196156, -2.999994, 0, 0},
                              { 5.795556, -1.552908, 0, 0} }
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 4
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t1.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t2.xyzw, s0, l(0.000000)
lt r0.x, l(0.000000), r0.x
if_nz r0.x
  mov r2.xyzw, r1.xyzw
  mov r0.x, l(0)
  loop 
    ige r0.z, r0.x, l(48)
    breakc_nz r0.z
    mul r0.zw, cb0[0].zzzz, icb[r0.x + 0].xxxy
    mad r0.zw, r0.zzzw, cb0[0].xxxy, v1.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.zwzz, t2.xyzw, s1, l(0.000000)
    add r2.xyzw, r2.xyzw, r3.xyzw
    iadd r0.x, r0.x, l(1)
  endloop 
  mul o0.xyzw, r2.xyzw, l(0.020408, 0.020408, 0.020408, 0.020408)
else 
  mov o0.xyzw, r1.xyzw
endif 
lt r0.x, l(0.000000), r0.y
if_nz r0.x
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t3.xyzw, s0, l(0.000000)
  mov r2.xyzw, r1.xyzw
  mov r0.x, r0.y
  mov r0.z, l(0)
  loop 
    ige r0.w, r0.z, l(48)
    breakc_nz r0.w
    mul r3.xy, cb0[0].zzzz, icb[r0.z + 0].xyxx
    mad r3.xy, r3.xyxx, cb0[0].xyxx, v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xzwy, s1, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t3.xyzw, s1, l(0.000000)
    add r2.xyzw, r2.xyzw, r3.xyzw
    add r0.x, r0.w, r0.x
    iadd r0.z, r0.z, l(1)
  endloop 
  div o1.xyzw, r2.xyzw, r0.xxxx
else 
  mov o1.xyzw, l(0,0,0,0)
endif 
ret 
// Approximately 0 instruction slots used
