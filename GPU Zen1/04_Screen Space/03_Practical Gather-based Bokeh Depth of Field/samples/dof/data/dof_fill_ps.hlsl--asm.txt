//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 7
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t1.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t3.xyzw, s0, l(0.000000)
lt r0.x, l(0.000000), r0.x
if_nz r0.x
  mov r3.xyzw, r1.xyzw
  mov r0.x, l(-1)
  loop 
    ilt r0.z, l(1), r0.x
    breakc_nz r0.z
    itof r4.x, r0.x
    mov r5.xyzw, r3.xyzw
    mov r0.z, l(-1)
    loop 
      ilt r0.w, l(1), r0.z
      breakc_nz r0.w
      itof r4.y, r0.z
      mad r4.yz, r4.xxyx, cb0[0].xxyx, v1.xxyx
      sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.yzyy, t2.xyzw, s0, l(0.000000)
      max r5.xyzw, r5.xyzw, r6.xyzw
      iadd r0.z, r0.z, l(1)
    endloop 
    mov r3.xyzw, r5.xyzw
    iadd r0.x, r0.x, l(1)
  endloop 
  mov o0.xyzw, r3.xyzw
else 
  mov o0.xyzw, r1.xyzw
endif 
lt r0.x, l(0.000000), r0.y
if_nz r0.x
  mov r0.xyzw, r2.xyzw
  mov r1.x, l(-1)
  loop 
    ilt r1.y, l(1), r1.x
    breakc_nz r1.y
    itof r3.x, r1.x
    mov r4.xyzw, r0.xyzw
    mov r1.y, l(-1)
    loop 
      ilt r1.z, l(1), r1.y
      breakc_nz r1.z
      itof r3.y, r1.y
      mad r1.zw, r3.xxxy, cb0[0].xxxy, v1.xxxy
      sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.zwzz, t3.xyzw, s0, l(0.000000)
      max r4.xyzw, r4.xyzw, r5.xyzw
      iadd r1.y, r1.y, l(1)
    endloop 
    mov r0.xyzw, r4.xyzw
    iadd r1.x, r1.x, l(1)
  endloop 
  mov o1.xyzw, r0.xyzw
else 
  mov o1.xyzw, r2.xyzw
endif 
ret 
// Approximately 0 instruction slots used
