//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 7
dcl_indexableTemp x0[48], 4
mov x0[0].xy, l(2.000000,0,0,0)
mov x0[1].xy, l(1.414214,1.414214,0,0)
mov x0[2].xy, l(-0.000000,2.000000,0,0)
mov x0[3].xy, l(-1.414214,1.414214,0,0)
mov x0[4].xy, l(-2.000000,-0.000000,0,0)
mov x0[5].xy, l(-1.414212,-1.414214,0,0)
mov x0[6].xy, l(0,-2.000000,0,0)
mov x0[7].xy, l(1.414214,-1.414214,0,0)
mov x0[8].xy, l(4.000000,0,0,0)
mov x0[9].xy, l(3.695520,1.530732,0,0)
mov x0[10].xy, l(2.828428,2.828428,0,0)
mov x0[11].xy, l(1.530732,3.695520,0,0)
mov x0[12].xy, l(-0.000000,4.000000,0,0)
mov x0[13].xy, l(-1.530736,3.695516,0,0)
mov x0[14].xy, l(-2.828428,2.828428,0,0)
mov x0[15].xy, l(-3.695520,1.530732,0,0)
mov x0[16].xy, l(-4.000000,-0.000000,0,0)
mov x0[17].xy, l(-3.695516,-1.530736,0,0)
mov x0[18].xy, l(-2.828424,-2.828428,0,0)
mov x0[19].xy, l(-1.530732,-3.695520,0,0)
mov x0[20].xy, l(0,-4.000000,0,0)
mov x0[21].xy, l(1.530736,-3.695516,0,0)
mov x0[22].xy, l(2.828428,-2.828428,0,0)
mov x0[23].xy, l(3.695520,-1.530732,0,0)
mov x0[24].xy, l(6.000000,0,0,0)
mov x0[25].xy, l(5.795556,1.552914,0,0)
mov x0[26].xy, l(5.196150,3.000000,0,0)
mov x0[27].xy, l(4.242642,4.242642,0,0)
mov x0[28].xy, l(3.000000,5.196156,0,0)
mov x0[29].xy, l(1.552914,5.795556,0,0)
mov x0[30].xy, l(-0.000000,6.000000,0,0)
mov x0[31].xy, l(-1.552914,5.795556,0,0)
mov x0[32].xy, l(-3.000000,5.196150,0,0)
mov x0[33].xy, l(-4.242642,4.242642,0,0)
mov x0[34].xy, l(-5.196156,3.000000,0,0)
mov x0[35].xy, l(-5.795556,1.552914,0,0)
mov x0[36].xy, l(-6.000000,-0.000000,0,0)
mov x0[37].xy, l(-5.795556,-1.552920,0,0)
mov x0[38].xy, l(-5.196150,-3.000000,0,0)
mov x0[39].xy, l(-4.242636,-4.242642,0,0)
mov x0[40].xy, l(-2.999994,-5.196156,0,0)
mov x0[41].xy, l(-1.552914,-5.795556,0,0)
mov x0[42].xy, l(0,-6.000000,0,0)
mov x0[43].xy, l(1.552914,-5.795556,0,0)
mov x0[44].xy, l(3.000000,-5.196150,0,0)
mov x0[45].xy, l(4.242642,-4.242642,0,0)
mov x0[46].xy, l(5.196156,-2.999994,0,0)
mov x0[47].xy, l(5.795556,-1.552908,0,0)
itof r0.x, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t1.xyzw, s0, r0.x
mov r0.x, r0.x
itof r0.y, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t0.xyzw, s0, r0.y
mov r0.y, r0.y
itof r0.z, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t2.xyzw, s0, r0.z
lt r0.x, l(0.000000), r0.x
if_nz r0.x
  nop 
  mov r0.xz, v1.xxyx
  itof r0.w, l(0)
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xzxx, t2.xyzw, s0, r0.w
  mov r0.w, l(0)
  mov r3.xyzw, r2.xyzw
  mov r4.x, r0.w
  loop 
    ilt r4.y, r4.x, l(48)
    breakc_z r4.y
    mov r4.yz, x0[r4.x + 0].xxyx
    mul r4.yz, r4.yyzy, cb0[0].zzzz
    mul r4.yz, r4.yyzy, cb0[0].xxyx
    add r4.yz, r0.xxzx, r4.yyzy
    itof r4.w, l(0)
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.yzyy, t2.xyzw, s1, r4.w
    add r3.xyzw, r3.xyzw, r5.xyzw
    iadd r4.x, r4.x, l(1)
  endloop 
  div r1.xyzw, r3.xyzw, l(49.000000, 49.000000, 49.000000, 49.000000)
  mov r1.xyzw, r1.xyzw
else 
  mov r1.xyzw, r1.xyzw
endif 
lt r0.x, l(0.000000), r0.y
if_nz r0.x
  nop 
  mov r0.xy, v1.xyxx
  itof r0.z, l(0)
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t3.xyzw, s0, r0.z
  itof r0.z, l(0)
  sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t0.xzyw, s0, r0.z
  mov r0.z, r0.z
  mov r0.w, l(0)
  mov r3.xyzw, r2.xyzw
  mov r4.x, r0.z
  mov r4.y, r0.w
  loop 
    ilt r4.z, r4.y, l(48)
    breakc_z r4.z
    mov r4.zw, x0[r4.y + 0].xxxy
    mul r4.zw, r4.zzzw, cb0[0].zzzz
    mul r4.zw, r4.zzzw, cb0[0].xxxy
    add r5.xy, r0.xyxx, r4.zwzz
    itof r5.z, l(0)
    sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t0.yxzw, s1, r5.z
    mov r5.x, r5.x
    add r4.zw, r0.xxxy, r4.zzzw
    itof r5.y, l(0)
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.zwzz, t3.xyzw, s1, r5.y
    add r3.xyzw, r3.xyzw, r6.xyzw
    add r4.x, r4.x, r5.x
    iadd r4.y, r4.y, l(1)
  endloop 
  div r0.xyzw, r3.xyzw, r4.xxxx
  mov r0.xyzw, r0.xyzw
else 
  mov r0.xyzw, l(0,0,0,0)
endif 
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r0.xyzw
ret 
// Approximately 0 instruction slots used
