//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
mov r0.x, l(0)
mov r1.xyz, l(0,0,0,0)
mov r0.z, cb0[0].z
loop 
  ilt r0.w, cb0[0].w, r0.z
  breakc_nz r0.w
  itof r0.w, r0.z
  mul r0.y, r0.w, cb0[0].y
  add r0.yw, r0.xxxy, v1.xxxy
  sample_indexable(texture2d)(float,float,float,float) r0.yw, r0.ywyy, t0.zxwy, s0
  add r1.xyz, r0.ywwy, r1.xyzx
  iadd r0.z, r0.z, l(1)
endloop 
iadd r0.x, -cb0[0].z, cb0[0].w
itof r0.x, r0.x
add r0.x, r0.x, l(1.000000)
div o0.xyz, r1.xyzx, r0.xxxx
mov o0.w, l(0)
ret 
// Approximately 0 instruction slots used
