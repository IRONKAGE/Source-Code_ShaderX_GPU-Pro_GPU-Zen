//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
mov r0.x, l(0)
mov r0.zw, l(0,0,0,0)
mov r1.x, cb0[0].z
loop 
  ilt r1.y, cb0[0].w, r1.x
  breakc_nz r1.y
  itof r1.y, r1.x
  mul r0.y, r1.y, cb0[0].y
  add r1.yz, r0.xxyx, v1.xxyx
  sample_indexable(texture2d)(float,float,float,float) r1.yz, r1.yzyy, t0.zxyw, s0
  add r0.zw, r0.zzzw, r1.yyyz
  iadd r1.x, r1.x, l(1)
endloop 
iadd r0.x, -cb0[0].z, cb0[0].w
itof r0.x, r0.x
add r0.x, r0.x, l(1.000000)
div o0.xy, r0.zwzz, r0.xxxx
mov o0.zw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used
