//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
mad r0.xyzw, cb0[0].xyxy, l(-3.000000, -3.000000, -2.000000, -2.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.x, r0.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.y, v1.xyxx, t0.yxzw, s0
add r1.x, -r1.x, r1.y
mul r1.x, |r1.x|, l(0.100000)
mad r1.x, r1.x, r1.x, l(0.001000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r1.x, r1.x, l(0.140367)
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.yzxw, s0
mul r0.z, r0.z, r1.x
sample_indexable(texture2d)(float,float,float,float) r0.w, r0.xyxx, t0.yzwx, s0
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xyzw, s0
add r0.y, -r0.w, r1.y
mul r0.y, |r0.y|, l(0.100000)
mad r0.y, r0.y, r0.y, l(0.001000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul r0.w, r0.y, l(0.106595)
mad r0.y, r0.y, l(0.106595), r1.x
mad r0.x, r0.w, r0.x, r0.z
add r0.zw, v1.xxxy, -cb0[0].xxxy
sample_indexable(texture2d)(float,float,float,float) r1.x, r0.zwzz, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0
add r0.z, -r0.z, r1.y
mul r0.z, |r0.z|, l(0.100000)
mad r0.z, r0.z, r0.z, l(0.001000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.w, r0.z, l(0.165569)
mad r0.y, r0.z, l(0.165569), r0.y
add r0.y, r0.y, l(174.937988)
mad r0.x, r0.w, r1.x, r0.x
sample_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t1.yzxw, s0
mad r0.x, r0.z, l(174.937988), r0.x
add r0.zw, v1.xxxy, cb0[0].xxxy
sample_indexable(texture2d)(float,float,float,float) r1.x, r0.zwzz, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0
add r0.z, -r0.z, r1.y
mul r0.z, |r0.z|, l(0.100000)
mad r0.z, r0.z, r0.z, l(0.001000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.w, r0.z, l(0.165569)
mad r0.y, r0.z, l(0.165569), r0.y
mad r0.x, r0.w, r1.x, r0.x
mad r0.zw, cb0[0].xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r1.x, r0.zwzz, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0
add r0.z, -r0.z, r1.y
mul r0.z, |r0.z|, l(0.100000)
mad r0.z, r0.z, r0.z, l(0.001000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.w, r0.z, l(0.140367)
mad r0.y, r0.z, l(0.140367), r0.y
mad r0.x, r0.w, r1.x, r0.x
mad r0.zw, cb0[0].xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r1.x, r0.zwzz, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0
add r0.z, -r0.z, r1.y
mul r0.z, |r0.z|, l(0.100000)
mad r0.z, r0.z, r0.z, l(0.001000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.w, r0.z, l(0.106595)
mad r0.y, r0.z, l(0.106595), r0.y
mad r0.x, r0.w, r1.x, r0.x
div o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 0 instruction slots used
