/**
 *
 *  This software module was originally developed for research purposes,
 *  by Multimedia Lab at Ghent University (Belgium).
 *  Its performance may not be optimized for specific applications.
 *
 *  Those intending to use this software module in hardware or software products
 *  are advized that its use may infringe existing patents. The developers of 
 *  this software module, their companies, Ghent Universtity, nor Multimedia Lab 
 *  have any liability for use of this software module or modifications thereof.
 *
 *  Ghent University and Multimedia Lab (Belgium) retain full right to modify and
 *  use the code for their own purpose, assign or donate the code to a third
 *  party, and to inhibit third parties from using the code for their products. 
 *
 *  This copyright notice must be included in all copies or derivative works.
 *
 *  For information on its use, applications and associated permission for use,
 *  please contact Prof. Rik Van de Walle (rik.vandewalle@ugent.be). 
 *
 *  Detailed information on the activities of
 *  Ghent University Multimedia Lab can be found at
 *  http://multimedialab.elis.ugent.be/.
 *
 *  Copyright (c) Ghent University 2004-2009.
 *
 **/

sampler2D fontTex = sampler_state {
  generateMipMap = false;
  minFilter = Nearest;
  magFilter = Nearest;
};

struct vsVertex {
    float4 xyz   : POSITION;
    float2 uv    : TEXCOORD0;
};

vsVertex vertex_main(vsVertex i) {     
	vsVertex o;
    //float2 pos = (i.xyz).xy * GuiAjust.xy + GuiAjust.zw;
    //o.xyz = float4((i.xyz).xy,0.9999999,1.0);
    o.xyz = i.xyz;
    o.uv = i.uv;
    return o;
} 

float4 fragment_main(vsVertex i) : COLOR {
    return tex2D(fontTex,i.uv);
} 

technique Default {
    pass P0 {
        BlendEnable = true;
        BlendFunc = int2(SrcAlpha,OneMinusSrcAlpha);    
        CullFace = Back;
        DepthTestEnable = false;
        VertexProgram   = compile gp4vp vertex_main();
        FragmentProgram = compile gp4fp fragment_main();
    }
}
