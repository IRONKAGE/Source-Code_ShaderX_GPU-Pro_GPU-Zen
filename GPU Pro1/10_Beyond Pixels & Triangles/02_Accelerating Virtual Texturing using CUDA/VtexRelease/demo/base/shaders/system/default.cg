/**
 *
 *  This software module was originally developed for research purposes,
 *  by Multimedia Lab at Ghent University (Belgium).
 *  Its performance may not be optimized for specific applications.
 *
 *  Those intending to use this software module in hardware or software products
 *  are advized that its use may infringe existing patents. The developers of 
 *  this software module, their companies, Ghent Universtity, nor Multimedia Lab 
 *  have any liability for use of this software module or modifications thereof.
 *
 *  Ghent University and Multimedia Lab (Belgium) retain full right to modify and
 *  use the code for their own purpose, assign or donate the code to a third
 *  party, and to inhibit third parties from using the code for their products. 
 *
 *  This copyright notice must be included in all copies or derivative works.
 *
 *  For information on its use, applications and associated permission for use,
 *  please contact Prof. Rik Van de Walle (rik.vandewalle@ugent.be). 
 *
 *  Detailed information on the activities of
 *  Ghent University Multimedia Lab can be found at
 *  http://multimedialab.elis.ugent.be/.
 *
 *  Copyright (c) Ghent University 2004-2009.
 *
 **/

sampler2D image = sampler_state {
  generateMipMap = false;
  minFilter = Linear;
  magFilter = Linear;
};

struct vsVertex {
    float4 xyz   : POSITION;
    float2 uv    : TEXCOORD0;
    float  diffuse : TEXCOORD1;
};

vsVertex vertex_main(klVertex i) {     
	vsVertex o;
    o.xyz = mul(ModelViewProjection, i.xyz);
    o.uv = i.uv;
    o.diffuse = max(dot(i.normal,normalize(float3(1,0,1))),0)*0.5 + 0.5;
    return o;
} 

float4 fragment_main(vsVertex i) : COLOR {    
    return tex2D(image,i.uv) * i.diffuse;
} 

technique Default {
    pass P0 {
        VertexProgram   = compile vp40 vertex_main();
        FragmentProgram = compile fp40 fragment_main();
    }
}



