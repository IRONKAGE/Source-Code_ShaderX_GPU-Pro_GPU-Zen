/* ******************************************************************************
* Description: This class represents an image. Contains the pixel values and meta
*              information of the image.
*
*  Version 1.0.0
*  Date: Nov 22, 2008
*  Author: David Illes, Peter Horvath
*          www.postpipe.hu
*
* GPUPro
***************************************************************************** */

#ifndef _IMAGE_
#define _IMAGE_

#include "imagePixel.hpp"

//==============================================================================
class Image {
//==============================================================================
public:
	int	bpp;									
	int	width;									
	int	height;
	int size;	
								
public:
	//unsigned char* pixels;
	ImagePixel* pixels;

//-----------------------------------------------------------------
// Summary: Constructs an image.
// Arguments: w - image width
//            h - image height
//            b - byte per pixel
//-----------------------------------------------------------------
Image(int w, int h, int b) {
//-----------------------------------------------------------------
	width = w;
	height = h;
	calculateSize();
	bpp = b;
	//pixels = new unsigned char[w*h*bpp/8];
	pixels = new ImagePixel[w*h];
}

//-----------------------------------------------------------------
// Summary: Constructs a default image.
//-----------------------------------------------------------------
Image() {
//-----------------------------------------------------------------
	pixels = 0;
}

//-----------------------------------------------------------------
// Summary: Frees memory.
//-----------------------------------------------------------------
~Image() {
//-----------------------------------------------------------------
	if (pixels) delete [] pixels;
}

//-----------------------------------------------------------------
// Returns: bit per pixel.
//-----------------------------------------------------------------
int getBpp() { return bpp; }
//-----------------------------------------------------------------

//-----------------------------------------------------------------
// Returns: image width.
//-----------------------------------------------------------------
int getWidth() { return width; }
//-----------------------------------------------------------------

//-----------------------------------------------------------------
// Returns: image height.
//-----------------------------------------------------------------
int getHeight() { return height; }
//-----------------------------------------------------------------

//-----------------------------------------------------------------
// Returns: image size (width*height).
//-----------------------------------------------------------------
int getSize() { return size; }
//-----------------------------------------------------------------

//-----------------------------------------------------------------
// Summary: calculates image size.
//-----------------------------------------------------------------
void calculateSize() {
//-----------------------------------------------------------------
	size = width * height; 
}

//-----------------------------------------------------------------
// Summary: Sets bit per pixel value.
//-----------------------------------------------------------------
void setBpp(int b) { bpp = b; }
//-----------------------------------------------------------------

//-----------------------------------------------------------------
// Summary: Sets image width.
//-----------------------------------------------------------------
void setWidth(int w) { width = w; }	
//-----------------------------------------------------------------

//-----------------------------------------------------------------
// Summary: Sets image height.
//-----------------------------------------------------------------
void setHeight(int h) { height = h; }	
//-----------------------------------------------------------------

};

#endif
