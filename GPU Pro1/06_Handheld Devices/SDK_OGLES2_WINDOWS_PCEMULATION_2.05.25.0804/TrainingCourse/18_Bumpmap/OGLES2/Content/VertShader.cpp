// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsh ********

// File data
static const char _VertShader_vsh[] = 
	"attribute highp vec4  inVertex;\r\n"
	"attribute highp vec3  inNormal;\r\n"
	"attribute highp vec2  inTexCoord;\r\n"
	"attribute highp vec3  inTangent;\r\n"
	"\r\n"
	"uniform highp mat4  MVPMatrix;\t\t// model view projection transformation\r\n"
	"uniform highp vec3  LightPosModel;\t// Light position (point light) in model space\r\n"
	"\r\n"
	"varying lowp vec3  LightVec;\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// Transform position\r\n"
	"\tgl_Position = MVPMatrix * inVertex;\r\n"
	"\t\r\n"
	"\t// Calculate light direction from light position in model space\r\n"
	"\t// You can skip this step for directional lights\r\n"
	"\thighp vec3 lightDirection = normalize(LightPosModel - vec3(inVertex));\r\n"
	"\t\r\n"
	"\t// transform light direction from model space to tangent space\r\n"
	"\thighp vec3 bitangent = cross(inNormal, inTangent);\r\n"
	"\thighp mat3 tangentSpaceXform = mat3(inTangent, inNormal, bitangent);\r\n"
	"\tLightVec = lightDirection * tangentSpaceXform;\r\n"
	"\t\r\n"
	"\tTexCoord = inTexCoord;\r\n"
	"}\r\n";

// Register VertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsh("VertShader.vsh", _VertShader_vsh, 903);

// ******** End: VertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsc ********

// File data
A32BIT _VertShader_vsc[] = {
0x10fab438,0x66574bf0,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0xf2030000,0x0,0x4000000,0x0,0x19000000,0x203,0x0,0x2010000,0x0,0x0,0x80020000,0x55535020,0x17,0x274,0x1,0x0,0x80c,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0x4000e,0x0,0x130000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x20000,0xffffffff,0x130000,0x1000e,0x0,0x10000,0x10001,0x10000,0x20002,0x10000,0x30003,0x10000,0x40004,0x10000,0x50005,0x10000,0x60006,0x10000,0x70007,
0x10000,0x80008,0x10000,0x90009,0x10000,0xa000a,0x10000,0xb000b,0x10000,0xc000c,0x10000,0xd000d,0x10000,0xe000e,0x10000,0xf000f,0x10000,0x100010,0x10000,0x110011,0x10000,0x120012,0x377f0000,0x40000,0x20000,0x2,0x6,0x800140cd,0x80018000,0x0,0x0,0x4,0x0,0x0,0xcd010001,0xfa100008,0x70001a1a,0xa22084,0xc04183,0x801402,0x20c00007,0x801002,0x81400380,0x8801202,0x902005b0,0x811000,0x2,0x2,0x80018001,0x80018001,0x0,0x0,0x4,0x1010101,0xfa100000,0xa0e00600,0x28a11001,0x2,0x14,0x80018000,0x80048004,0x0,0x0,0x4,
0x10001,0x10001,0x10001,0x10001,0x10001,0x1,0x10000,0x10001,0x10001,0x10404,0xfa100000,0xf000050b,0x10a83205,0xf020060d,0x38980605,0xf0004811,0x38820606,0xf0008a15,0x38820606,0xf040cc19,0x38a20205,0x62c083,0x38980605,0xe0400080,0x28831002,0x8021057c,0x38880604,0xb0218400,0x81100e,0xb0008281,0x891007,0x20a18109,0x38aa0205,0xb1814501,0x81100e,0x90604630,0x811000,0x80020281,0x38ab0606,0xb0010480,0x81100e,0xb0008481,0x891007,0x80208083,0x881007,0xa0808500,0x38a20201,0xe0c00080,0x28831001,0x6,0x1400,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x9000000,0x505f6c67,0x7469736f,0x6e6f69,0x5050100,0x10000,0x100,0xf0004,0x50564d00,0x7274614d,0x7869,0x31600,0x100,0x10000001,0xffff,0x65566e69,0x78657472,0x5000000,0x1000004,0x10000,0xf000400,0x694c0000,0x50746867,0x6f4d736f,0x6c6564,0x3040000,0x10000,0x10000100,0x70003,0x4e6e6900,0x616d726f,0x6c,0x404,0x1000001,0x40400,0x69000007,0x6e61546e,0x746e6567,0x4000000,0x1000004,0x10000,0x7000408,0x694c0000,0x56746867,0x6365,0x50400,0x100,0x3000001,0x700,0x43786554,0x64726f6f,0x3000000,0x1000005,0x10000,0x3000204,0x6e690000,0x43786554,0x64726f6f,
0x3000000,0x1000004,0x10000,0x300040c,0x0,
};

// Register VertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsc("VertShader.vsc", _VertShader_vsc, 1042);

// ******** End: VertShader.vsc ********

