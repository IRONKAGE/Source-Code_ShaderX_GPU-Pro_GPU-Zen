// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsh ********

// File data
static const char _FragShader_fsh[] = 
	"uniform sampler2D  sReflectTex;\r\n"
	"uniform sampler2D  sNormalMap;\r\n"
	"\r\n"
	"varying mediump vec3  EyeDirection;\r\n"
	"\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// Get the normal direction per pixel from the normal map\r\n"
	"\t// The tNormal vector is defined in surface local coordinates (tangent space).\r\n"
	"\tmediump vec3 normal = texture2D(sNormalMap, TexCoord).rgb * 2.0 - 1.0;\r\n"
	"\t\r\n"
	"\t// reflect(): For the incident vector I and surface orientation N, returns the reflection direction:\r\n"
	"\t// I - 2 * dot(N, I) * N, N must already be normalized in order to achieve the desired result.\r\n"
	"\tmediump vec3 reflectDir = reflect(normal, EyeDirection);\r\n"
	"\tmediump vec2 reflectCoord = (reflectDir.xy) * 0.5 + 0.5;\r\n"
	"\t\r\n"
	"\t// Look-up in the 2D texture using the normal map disturbance\r\n"
	"\tgl_FragColor = texture2D(sReflectTex, reflectCoord);\r\n"
	"}";

// Register FragShader.fsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsh("FragShader.fsh", _FragShader_fsh, 815);

// ******** End: FragShader.fsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsc ********

// File data
A32BIT _FragShader_fsc[] = {
0x10fab438,0x614ccb00,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0xd050000,0x1000000,0x4000000,0x0,0x18000000,0x10203,0x2a0008,0x2020100,0xa200,0xc1301,0x1e020000,0x55535020,0x17,0x212,0x1,0x0,0x848,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x770009,0xffff,0x30003,0x0,0x30002,0x0,0x0,0x0,0x0,0xfffc0000,0x20003,0x10004,0x0,0x20000,0xffffffff,0x20001,0x60000,0x10000,0x20003,0x0,0x2,0x20000,0x8,0x20000,0x9,0x30010,0x10003,0x50a0000,0x1ffea140,0x44080,0x20000,0x2,
0x20001,0x80018001,0x80018001,0x0,0x0,0x1000004,0x0,0x5fd10,0x10000,0x80010002,0x80018001,0x8001,0x0,0x40000,0x70000,0x60a0007,0x30003,0x30003,0x20002,0x20002,0x40004,0x40004,0x10000,0x30002,0x30001,0x20002,0x2,0x20006,0x80018001,0x80018001,0x0,0x0,0x40004,0x40004,0x40004,0xd800a538,0x88119304,0x464000,0x40001f7c,0x80002044,0x10601000,0x20440000,0x40011fbe,0x80308101,0x401006,0xd0406930,0x411006,0x2,0x20002,0x80004089,0x80018001,0x0,0x0,0x40004,0x89000101,0xfa100008,0x8000a044,0x601086,0x2,0x20002,0x80018001,0x80008000,0x0,0x0,
0x40004,0x1010000,0xfa100000,0xf00069d3,0x601006,0x5,0x20000,0x80018001,0x80008000,0x0,0x0,0x10012,0xf000f,0x3060a,0x30003,0x20003,0x20002,0x40002,0x40004,0x4,0x20001,0x10003,0x3,0x1404a000,0x6e003,0x0,0x50201e02,0x175553,0x2120000,0x10000,0x0,0x9480000,0x0,0x20000,0x790000,0x0,0x80000,0x0,0xffff0000,0xffff,0x90000,0xffff0077,0x30000,0x4,0x20000,0x3,0x0,0x0,0x0,0x0,0x1fffc,0x40000,0x1,0x0,0xffff0002,0x1ffff,0x2,0x6,0x30001,0x2,0x20000,0x0,0x80002,0x0,
0x90002,0x100000,0x30003,0x1,0xa140050a,0x40801ffe,0x4,0x20002,0x10000,0x80010002,0x80018001,0x8001,0x0,0x40000,0x100,0xfd100000,0x5,0x20001,0x80018001,0x80018001,0x0,0x0,0x4,0x70007,0x3060a,0x30003,0x20003,0x20002,0x40002,0x40004,0x4,0x20001,0x10003,0x20004,0x20002,0x30000,0x80010002,0x80018001,0x8001,0x0,0x40000,0x40004,0xd820a538,0x88119304,0x664081,0x40001f7c,0x80202046,0x10601000,0x2,0x20005,0x80004044,0x80018001,0x0,0x0,0x40004,0x40004,0x1010004,0x84400,0x80fa10,0x1fbc2004,0x80024001,0x10040010,0x29300040,0x1000d020,
0x60460041,0x10808000,0x20060,0x20000,0x80010002,0x80008001,0x8000,0x0,0x40000,0x4,0x101,0x29d3fa10,0x1000f000,0x50060,0x0,0x80010002,0x80008001,0x8000,0x0,0x120000,0xf0001,0x60a000f,0x10001,0x10001,0x0,0x0,0x40004,0x40004,0x10000,0x30002,0x40001,0xa0000000,0xe0031400,0x6,0xc00,0x0,0x0,0x400000,0x0,0x0,0x0,0x803f0000,0x400000,0x3f0000,0x0,0x0,0x4000000,0x726f4e73,0x4d6c616d,0x7061,0x31800,0x100,0x1000002,0x100,0x43786554,0x64726f6f,0x3000000,0x1000005,0x10000,0x3000204,0x79450000,0x72694465,0x69746365,0x6e6f,
0x50400,0x100,0x3000001,0x700,0x66655273,0x7463656c,0x786554,0x3180000,0x10000,0x1000200,0x10001,0x0,
};

// Register FragShader.fsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsc("FragShader.fsc", _FragShader_fsc, 1325);

// ******** End: FragShader.fsc ********

