// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsh ********

// File data
static const char _FragShader_fsh[] = 
	"uniform sampler2D  sThicknessTex;\r\n"
	"\r\n"
	"uniform highp float  MinThickness;\r\n"
	"uniform highp float  MaxVariation;\r\n"
	"\r\n"
	"varying mediump float  CosViewAngle;\r\n"
	"varying mediump float  LightIntensity;\r\n"
	"varying mediump vec2   TexCoord;\r\n"
	"\r\n"
	"// We use wave numbers (k) for the iridescence effect, given as\r\n"
	"//   k =  2 * pi / wavelength in nm.\r\n"
	"const highp float  PI = 3.141592654;\r\n"
	"const highp vec3   cRgbK = 2.0 * PI * vec3(1.0/475.0, 1.0/510.0, 1.0/650.0);\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\thighp float thickness = texture2D(sThicknessTex, TexCoord).r * MaxVariation + MinThickness;\r\n"
	"\thighp float delta = (thickness / LightIntensity) + (thickness / CosViewAngle);\r\n"
	"\tlowp vec3 color = cos(delta * cRgbK) * LightIntensity;\r\n"
	"\tgl_FragColor = vec4(color, 1.0);\r\n"
	"}";

// Register FragShader.fsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsh("FragShader.fsh", _FragShader_fsh, 730);

// ******** End: FragShader.fsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsc ********

// File data
A32BIT _FragShader_fsc[] = {
0x10fab438,0xfece6d89,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0xc7060000,0x1000000,0x4000000,0x0,0x38000000,0x20202,0x0,0x2020000,0x2,0x0,0xc6020000,0x55535020,0x17,0x2ba,0x1,0x0,0x848,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x770009,0xffff,0x50003,0x0,0x60003,0x0,0x0,0x0,0x0,0xfffc0000,0x10003,0x10004,0x0,0x20000,0xffffffff,0x70001,0x60000,0x20000,0x20001,0x0,0x1,0x60000,0x30000,0x20001,0x1,0x0,0x10001,0x1,0x20001,0x2,0x40001,0x3,
0x50001,0x4,0x60001,0x5,0x61e01c00,0x91837802,0x4,0x50002,0x10000,0x80010000,0x80018001,0x8001,0x0,0x0,0x10000,0x6880001,0x30003,0x30003,0x20001,0x40003,0x10001,0x10001,0x0,0x0,0x50001,0x20001,0x2,0x8,0x80018001,0x80018001,0x0,0x0,0x0,0x0,0x10000,0x1,0xf000448a,0x801004,0x80200000,0x8801082,0x80400100,0x8801082,0xa0400101,0x38a00002,0xf020860d,0x38ab0606,0xd01f058e,0x811000,0xd03f458e,0x811000,0x0,0xa01600,0x2,0x1d,0x80018001,0x80008000,0x0,0x0,0x4,0x10000,0x10001,0x10001,0x1,0x10001,
0x10001,0x10001,0x10001,0x10001,0x10001,0x0,0x0,0x100012,0x10,0x101,0x1322fa10,0x10085060,0xc10e00a3,0x8602b020,0x58e38ab,0x1000d05f,0x1020081,0x16000040,0x93220080,0x10085020,0x542a0083,0x1022503f,0x40ac0083,0x100ed020,0x408e0083,0x1006d020,0x830083,0x86028021,0x542a38ab,0x1022503f,0x40ac0083,0x100ed020,0x408e0083,0x1004d000,0x40083,0x8602003f,0x5a0138ab,0x1002703f,0x5a400083,0x12846040,0x8100c2,0x8602005f,0x5a0138ab,0x1002703f,0x5a400083,0x12846060,0x142a00c2,0x1022503f,0x402c0083,0x100ed020,0x400e0083,0x1006d020,0x40b00083,0x10061020,0x40b00081,0x10069040,0x9a020081,0x10066040,0x9a400082,0x12846080,0x10300c2,0x1c3e0024,0x2004080,0x1c062024,
0x7804081,0x1022e023,0x64081,0x0,0x5020de02,0x175553,0x2d20000,0x10000,0x0,0x9480000,0x0,0x20000,0x790000,0x0,0x80000,0x0,0xffff0000,0xffff,0x90000,0xffff0077,0x30000,0x6,0x30000,0x6,0x0,0x0,0x0,0x0,0x1fffc,0x40000,0x1,0x0,0xffff0002,0x1ffff,0x7,0x6,0x10002,0x2,0x10000,0x0,0x4,0x10003,0x10002,0x0,0x10000,0x10001,0x10000,0x20002,0x10000,0x30004,0x10000,0x40005,0x10000,0x50006,0x1c000000,0x780261e0,0x49183,0x20000,0x5,0x1,0x80018001,0x80018001,0x0,0x0,
0x0,0x10001,0x10688,0x10001,0x1,0x20001,0x10003,0x10001,0x1,0x0,0x10000,0x10006,0x20002,0x80000,0x80010000,0x80018001,0x8001,0x0,0x0,0x0,0x0,0x10001,0x48a0000,0x1000f040,0x80,0x10808000,0x1000880,0x10808020,0x80800880,0x40,0x860d38a0,0x600f000,0x58e38ab,0x1000d01f,0x458e0081,0x1000d03f,0x81,0x16000000,0x200a0,0x20000,0x80010000,0x80008001,0x8000,0x0,0x40000,0x0,0x101,0x1322fa10,0x10085060,0x200a3,0x1b0000,0x80010000,0x80fe8000,0x8000,0x0,0x40000,0x10000,0x10001,0x10001,0x1,0x10001,0x10001,0x10001,0x10001,
0x10001,0x10001,0x0,0x120000,0x100010,0x100fe00,0xfa100000,0x3000c10e,0x38ab8600,0xd05f058e,0x811000,0x400102,0x801600,0x50409322,0x831008,0x501f542a,0x831020,0xd00000ac,0x831008,0xd000008e,0x831000,0x10003,0x38ab8600,0x501f542a,0x831020,0xd00000ac,0x831008,0xd020008e,0x831000,0x1f0084,0x38ab8600,0x701f5a01,0x831000,0x60601a40,0xc21280,0x3f0102,0x38ab8600,0x701f5a01,0x831000,0x60801a40,0xc21280,0x501f142a,0x831020,0xd000002c,0x831008,0xd000000e,0x831000,0x10000130,0xa11000,0x40205a01,0x821000,0x60a05a40,0xc21280,0x40184,0x40801c3c,0x20040280,0x40811c04,0xe0030780,0x40811020,0x6,0x1000,0x0,0x223e0000,0xc94083f9,
0x583cdb0f,0x493c3db9,0x1e3cb5d9,0x3ffc5f,0x0,0x0,0x0,0x803f0000,0x49c00000,0xdb0f,0x0,0x0,0x6000000,0x69685473,0x656e6b63,0x65547373,0x78,0x318,0x2000001,0x10000,0x54000001,0x6f437865,0x64726f,0x5030000,0x10000,0x100,0x30002,0x78614d00,0x69726156,0x6f697461,0x6e,0x302,0x1000001,0x10000,0x4d000001,0x68546e69,0x6e6b6369,0x737365,0x3020000,0x10000,0x1000100,0x10001,0x67694c00,0x6e497468,0x736e6574,0x797469,0x5020000,0x10000,0x4000100,0x10001,0x736f4300,0x77656956,0x6c676e41,0x65,0x502,0x1000001,0x10800,0x1,
};

// Register FragShader.fsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsc("FragShader.fsc", _FragShader_fsc, 1767);

// ******** End: FragShader.fsc ********

