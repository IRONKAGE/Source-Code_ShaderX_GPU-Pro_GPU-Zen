// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsh ********

// File data
static const char _FragShader_fsh[] = 
	"uniform sampler2D s2DMap;\r\n"
	"uniform samplerCube sCubeMap;\r\n"
	"\r\n"
	"uniform bool bCubeReflection;\r\n"
	"\r\n"
	"varying mediump vec3  ReflectDir;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// select whether to use cube map reflection or 2d reflection\t\r\n"
	"\tif(bCubeReflection)\r\n"
	"\t{\r\n"
	"\t\tgl_FragColor = textureCube(sCubeMap, ReflectDir);\r\n"
	"\t}\r\n"
	"\telse \r\n"
	"\t{\r\n"
	"\t\tgl_FragColor = texture2D(s2DMap, ReflectDir.xy * 0.5 + 0.5);\r\n"
	"\t}\r\n"
	"}";

// Register FragShader.fsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsh("FragShader.fsh", _FragShader_fsh, 375);

// ******** End: FragShader.fsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsc ********

// File data
A32BIT _FragShader_fsc[] = {
0x10fab438,0xdaf2aa90,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0x4d040000,0x1000000,0x4000000,0x0,0x8000000,0x4403,0x0,0x20000,0x0,0x0,0xbe010000,0x55535020,0x17,0x1b2,0x1,0x0,0x848,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x770009,0xffff,0x20002,0x0,0x30002,0x0,0x0,0x0,0x0,0xfffc0000,0x10003,0x10004,0x0,0x20000,0xffffffff,0x20000,0x40000,0x10000,0x20002,0x0,0x1,0x20000,0x2,0x20000,0x3,0x10010,0x10000,0x40000,0x20000,0x2,0x1,0x80018001,
0x80018001,0x0,0x0,0x5300000,0x1281d000,0x348a9,0x0,0x400000,0x3fd00,0x5,0x1,0x80018001,0x80018001,0x0,0x0,0x12,0xf000f,0x3060a,0x30003,0x10003,0x10001,0x40001,0x40004,0x4,0x20001,0x10003,0x10002,0x30003,0x0,0x400000,0x4f800,0x4,0x20003,0x20000,0x80010000,0x80018001,0x8001,0x0,0x40000,0x29520004,0x1004f010,0x69520040,0x1004f030,0x50040,0x0,0x80010000,0x80018001,0x8001,0x0,0x120000,0xf0001,0x60a000f,0x30003,0x30003,0x10001,0x10001,0x40004,0x40004,0x10000,0x30002,0x20001,0xa0000000,0xe0031400,0x4,
0x60004,0x0,0x5020e001,0x175553,0x1d40000,0x10000,0x0,0x9480000,0x0,0x20000,0x790000,0x0,0x80000,0x0,0xffff0000,0xffff,0x90000,0xffff0077,0x20000,0x2,0x20000,0x3,0x0,0x0,0x0,0x0,0x1fffc,0x40000,0x1,0x0,0xffff0002,0xffff,0x2,0x4,0x20001,0x2,0x10000,0x0,0x20002,0x0,0x30002,0x100000,0x1,0x1,0x4,0x20002,0x10000,0x80010000,0x80018001,0x8001,0x0,0x0,0xd0000530,0x48a91281,0x3,0x0,0xfd000040,0x50003,0x10000,0x80010000,0x80018001,0x8001,0x0,0x0,
0xf0000,0x60a000f,0x30003,0x30003,0x10001,0x10001,0x40004,0x40004,0x10000,0x30002,0x20001,0x30001,0x2,0x1,0x80018001,0x80018001,0x0,0x0,0x800012,0x1000a000,0x32881,0x0,0x400000,0x4f800,0x4,0x20003,0x20000,0x80010000,0x80018001,0x8001,0x0,0x40000,0x29520004,0x1004f010,0x69520040,0x1004f030,0x50040,0x0,0x80010000,0x80018001,0x8001,0x0,0x120000,0xf0001,0x60a000f,0x10001,0x10001,0x0,0x0,0x40004,0x40004,0x10000,0x30002,0x20001,0xa0000000,0xe0031400,0x4,0x60004,0x4000000,0x0,0x0,0x3f,0x0,0x43620400,
0x52656275,0x656c6665,0x6f697463,0x6e,0x30a,0x1000001,0x10000,0x73000001,0x65627543,0x70614d,0x31a0000,0x10000,0x200,0x10001,0x66655200,0x7463656c,0x726944,0x5040000,0x10000,0x100,0x70003,0x44327300,0x70614d,0x3180000,0x10000,0x1000200,0x10001,0x0,
};

// Register FragShader.fsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsc("FragShader.fsc", _FragShader_fsc, 1133);

// ******** End: FragShader.fsc ********

