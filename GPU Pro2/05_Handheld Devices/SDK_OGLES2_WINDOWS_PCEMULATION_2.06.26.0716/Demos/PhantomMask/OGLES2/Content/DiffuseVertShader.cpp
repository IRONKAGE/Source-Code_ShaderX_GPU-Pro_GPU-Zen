// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: DiffuseVertShader.vsh ********

// File data
static const char _DiffuseVertShader_vsh[] = 
	"attribute highp   vec3  inVertex;\r\n"
	"attribute mediump vec3  inNormal;\r\n"
	"attribute mediump vec2  inTexCoord;\r\n"
	"\r\n"
	"uniform highp   mat4  MVPMatrix;\r\n"
	"uniform highp   mat3  Model;\r\n"
	"\r\n"
	"// Precalculated constants used for lighting\r\n"
	"uniform mediump   vec3  LightDir1;\r\n"
	"uniform mediump   vec3  LightDir2;\r\n"
	"uniform mediump   vec3  LightDir3;\r\n"
	"uniform mediump   vec3  LightDir4;\r\n"
	"uniform mediump   vec4  Ambient;\r\n"
	"\r\n"
	"// varyings\r\n"
	"varying lowp    vec4  LightColour;\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\thighp vec4 r1;\r\n"
	"\thighp vec3 norm, r2, r3;\r\n"
	"\t\r\n"
	"\t// Transform position\r\n"
	"\tgl_Position = MVPMatrix * vec4(inVertex, 1.0);\r\n"
	"\r\n"
	"\t// Transform the Normal\r\n"
	"\tnorm = normalize(Model * inNormal);\r\n"
	"\r\n"
	"\t// compute lighting\r\n"
	"\tr1.x =\tmax(0.0, dot(norm, LightDir1));\t// White Light\r\n"
	"\tr1.y =\tmax(0.0, dot(norm, LightDir2));\t// Blue Light\r\n"
	"\tr1.z =\tmax(0.0, dot(norm, LightDir3));\t// Green Light\r\n"
	"\tr1.w =\tmax(0.0, dot(norm, LightDir4));\t// Red Light\r\n"
	"\r\n"
	"\tLightColour.r = (r1.x + r1.w) + Ambient.r; // White Light (BGRA)\r\n"
	"\tLightColour.g = (r1.x + r1.z) + Ambient.g; // Red Light (BGRA)\r\n"
	"\tLightColour.b = (r1.x + r1.y) + Ambient.b; // Green Light (BGRA)\r\n"
	"\tLightColour.a = r1.x + Ambient.a; // Blue Light (BGRA)\r\n"
	"\r\n"
	"\t// Pass through texcoords\r\n"
	"\tTexCoord = inTexCoord;\r\n"
	"}";

// Register DiffuseVertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_DiffuseVertShader_vsh("DiffuseVertShader.vsh", _DiffuseVertShader_vsh, 1246);

// ******** End: DiffuseVertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: DiffuseVertShader.vsc ********

// File data
A32BIT _DiffuseVertShader_vsc[] = {
0x10fab438,0x7b5c1f02,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0xaf060000,0x0,0x4000000,0x0,0x19000000,0x750204,0x1000100,0x2010000,0x0,0x0,0x58040000,0x55535020,0x17,0x44c,0x1,0x0,0x80c,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0xa,0x0,0x2e0000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x20000,0xffffffff,0x240000,0x2000a,0x20,0x20000,0x21,0x20010,0x10024,0x20000,0x10025,0x20010,0x20028,0x20000,0x20029,0x20010,0x3002c,0x20000,0x3002d,
0x20010,0x40030,0x20000,0x40031,0x20010,0x50032,0x20000,0x50033,0x10010,0x60004,0x10000,0x70005,0x10000,0x80006,0x10000,0x90007,0x10000,0xa0008,0x10000,0xb0009,0x10000,0xc000a,0x10000,0xd000b,0x10000,0xe000c,0x10000,0xf000d,0x10000,0x10000e,0x10000,0x11000f,0x10000,0x120010,0x10000,0x130011,0x10000,0x140012,0x10000,0x150013,0x10000,0x160014,0x10000,0x170015,0x10000,0x180016,0x10000,0x190018,0x10000,0x1a0019,0x10000,0x1b001a,0x10000,0x1c001c,0x10000,0x1d001d,0x10000,0x1e001e,0x20000,0x1f0022,0x20000,0x1f0023,0x20010,0x200026,
0x20000,0x200027,0x20010,0x21002a,0x20000,0x21002b,0x20010,0x22002e,0x20000,0x22002f,0x40010,0x0,0x23,0x377,0x4,0x20002,0x10000,0x80000001,0x80008000,0x8000,0x0,0x40000,0x1,0xfd100000,0x2,0x10002,0x80038000,0x80018003,0x0,0x0,0x4,0x30301,0xfa100000,0xe0e01104,0x10a02002,0x2,0x10012,0x80018001,0x80018001,0x0,0x0,0x4,0x10000,0x10001,0x10000,0x10001,0x10001,0x10001,0x10001,0x10001,0x1010101,0xfa100000,0xa1000400,0x28a11001,0xf0600913,0x38ab0606,0xf0604b17,0x38820606,0xf0608d1b,0x38820606,0x705f1a1e,0xa21001,0xf0611021,0x38ab0606,
0xf06151a4,0x38820606,0xf0619327,0x38820606,0xf07f0081,0x831402,0xa061c383,0x801006,0x80600180,0x8801202,0x90c1c1b0,0x811006,0xb080c1ad,0x38a9c206,0xf0a00811,0x38980606,0xf0004a15,0x38820606,0xf0008c19,0x38820606,0x701f1a1c,0xa21001,0x2,0x10003,0x800080ff,0x80018000,0x0,0x0,0x4,0x10001,0xff00,0x2a56fa10,0x606f001,0x6ad738ab,0x606f001,0x23882,0x20000,0x80ff0001,0x80008000,0x8001,0x520000,0x50054,0x20540001,0x5,0xa040fb10,0x606f001,0x23882,0x40000,0x80ff0001,0x80008000,0x8001,0x0,0x50000,0x1,0x1,0x0,0x1800fb10,0x12027060,0x2c5a18a3,0x606f001,0x6cdb38ab,0x606f001,0x23882,0x20000,
0x80ff0001,0x80008000,0x8001,0x560000,0x50058,0x60580001,0x5,0xa040fb10,0x606f001,0x23882,0x20000,0x80ff0001,0x80008000,0x8001,0x0,0x50000,0x1,0x0,0x1800fb10,0x12027020,0x218a3,0x50000,0x80010001,0x80008001,0x8001,0x0,0x40000,0x10000,0x10000,0x1010001,0xfa100000,0xa000c001,0x38a30606,0x708f1a5c,0xe21001,0xb0e0c15f,0x38b30405,0x70cf1a5e,0xc21001,0x6,0x803f3400,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xd000000,0x65566e69,0x78657472,0x4000000,0x1000004,0x10000,0x7000400,0x6c670000,0x736f505f,0x6f697469,0x100006e,0x505,0x1000001,0x40000,0x4d00000f,0x614d5056,0x78697274,0x16000000,0x1000003,0x10000,0xffff1004,0x6e690000,0x6d726f4e,0x6c61,0x40400,0x100,0x4040001,0x700,0x65646f4d,0x6c,0x312,0x1000001,0x70c1400,0x4c000077,0x74686769,0x31726944,
0x4000000,0x1000003,0x10000,0x7000320,0x694c0000,0x44746867,0x327269,0x3040000,0x10000,0x24000100,0x70003,0x67694c00,0x69447468,0x3372,0x30400,0x100,0x3280001,0x700,0x6867694c,0x72694474,0x34,0x304,0x1000001,0x32c00,0x41000007,0x6569626d,0x746e,0x30500,0x100,0x4300001,0xf00,0x6867694c,0x6c6f4374,0x72756f,0x5050000,0x10000,0x100,0xf0004,0x78655400,0x726f6f43,0x64,0x503,0x1000001,0x20400,0x69000003,0x7865546e,0x726f6f43,0x64,0x403,0x1000001,0x40800,0x3,
};

// Register DiffuseVertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_DiffuseVertShader_vsc("DiffuseVertShader.vsc", _DiffuseVertShader_vsc, 1743);

// ******** End: DiffuseVertShader.vsc ********

