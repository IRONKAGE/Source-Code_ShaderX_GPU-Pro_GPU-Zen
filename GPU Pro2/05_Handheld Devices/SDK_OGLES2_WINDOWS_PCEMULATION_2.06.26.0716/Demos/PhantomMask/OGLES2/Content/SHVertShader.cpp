// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: SHVertShader.vsh ********

// File data
static const char _SHVertShader_vsh[] = 
	"attribute highp   vec3  inVertex;\r\n"
	"attribute mediump vec3  inNormal;\r\n"
	"attribute mediump vec2  inTexCoord;\r\n"
	"\r\n"
	"uniform highp   mat4  MVPMatrix;\r\n"
	"uniform highp   mat3  Model;\r\n"
	"\r\n"
	"// Precalculated constants used for lighting\r\n"
	"uniform highp   vec4  cAr;\r\n"
	"uniform highp   vec4  cAg;\r\n"
	"uniform highp   vec4  cAb;\r\n"
	"\r\n"
	"uniform highp\tvec4  cBr;\r\n"
	"uniform highp\tvec4  cBg;\r\n"
	"uniform highp\tvec4  cBb;\r\n"
	"\r\n"
	"uniform highp\tvec3  cC;\r\n"
	"\r\n"
	"// varyings\r\n"
	"varying lowp    vec4  LightColour;\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\thighp vec4 r0, r1;\r\n"
	"\thighp vec3 r2, r3;\r\n"
	"\t\r\n"
	"\t// Transform position\r\n"
	"\tgl_Position = MVPMatrix * vec4(inVertex, 1.0);\r\n"
	"\r\n"
	"\t// Transform the Normal and add a homogenous 1\r\n"
	"\tr0 = vec4(Model * inNormal, 1.0);\r\n"
	"\r\n"
	"\t// Compute 1st 4 basis functions - linear + constant\r\n"
	"\t// r0 is the normal with a homegenous 1\r\n"
	"\t// c* are precomputed constants\r\n"
	"\tr2.x = dot(cAr, r0);\r\n"
	"\tr2.y = dot(cAg, r0);\r\n"
	"\tr2.z = dot(cAb, r0);\r\n"
	"\t\r\n"
	"\t// Compute polynomials for the next 4 basis functions\r\n"
	"\tr1 = r0.yzzx * r0.xyzz; // r1 is { yx, zy, z^2, xz}\r\n"
	"\r\n"
	"\t// Add contributions and store them in r3\r\n"
	"\tr3.x = dot(cBr, r1);\r\n"
	"\tr3.y = dot(cBg, r1);\r\n"
	"\tr3.z = dot(cBb, r1);\r\n"
	"\r\n"
	"\t// Compute the final basis function x^2 - y^2\r\n"
	"\tr0.z = r0.y * r0.y;\r\n"
	"\tr0.w = (r0.x * r0.x) - r0.z;\r\n"
	"\t\r\n"
	"\t// Combine the first 2 sets : 8 basis functions\r\n"
	"\tr1.xyz = r2 + r3;\r\n"
	"\r\n"
	"\t// Add in the final 9th basis function to create the final RGB Lighting\r\n"
	"\tLightColour.xyz = (cC * r0.w) + r1.xyz;\r\n"
	"\t\r\n"
	"\t// Set light alpha to 1.0\r\n"
	"\tLightColour.a = 1.0;\r\n"
	"\r\n"
	"\t// Pass through texcoords\r\n"
	"\tTexCoord = inTexCoord;\r\n"
	"}";

// Register SHVertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_SHVertShader_vsh("SHVertShader.vsh", _SHVertShader_vsh, 1553);

// ******** End: SHVertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: SHVertShader.vsc ********

// File data
A32BIT _SHVertShader_vsc[] = {
0x10fab438,0xff801e29,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0xc6060000,0x0,0x4000000,0x0,0x19000000,0x204,0x0,0x2010000,0x0,0x0,0x42040000,0x55535020,0x17,0x436,0x1,0x0,0x80c,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0x4000a,0x0,0x350000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x20000,0xffffffff,0x350000,0x1000a,0x1,0x10000,0x10002,0x10000,0x20003,0x10000,0x30004,0x10000,0x40005,0x10000,0x50006,0x10000,0x60007,0x10000,0x70008,
0x10000,0x80009,0x10000,0x9000a,0x10000,0xa000b,0x10000,0xb000c,0x10000,0xc000d,0x10000,0xd000e,0x10000,0xe000f,0x10000,0xf0010,0x10000,0x100011,0x10000,0x110012,0x10000,0x120013,0x10000,0x130014,0x10000,0x140015,0x10000,0x150016,0x10000,0x160018,0x10000,0x170019,0x10000,0x18001a,0x10000,0x19001c,0x10000,0x1a001d,0x10000,0x1b001e,0x10000,0x1c0020,0x10000,0x1d0021,0x10000,0x1e0022,0x10000,0x1f0023,0x10000,0x200024,0x10000,0x210025,0x10000,0x220026,0x10000,0x230027,0x10000,0x240028,0x10000,0x250029,0x10000,0x26002a,0x10000,0x27002b,
0x10000,0x28002c,0x10000,0x29002d,0x10000,0x2a002e,0x10000,0x2b002f,0x10000,0x2c0030,0x10000,0x2d0031,0x10000,0x2e0032,0x10000,0x2f0033,0x10000,0x300034,0x10000,0x310035,0x10000,0x320036,0x10000,0x330037,0x30000,0x34003b,0x3770000,0x40000,0x20000,0x2,0x2,0x80038000,0x80018003,0x0,0x0,0x4,0x30301,0xfa100000,0xe0400f84,0x10a02000,0x2,0x12,0x80018001,0x80018001,0x0,0x0,0x4,0x0,0x10001,0x10001,0x10001,0x10001,0x10001,0x10001,0x10001,0x1010101,0xfa100000,0xe0e41f00,0x40811fbd,0xa1000400,0x28a11001,0xf0610e9e,0x38ab0606,0xf0615021,
0x38820606,0xf0c191a4,0x38a20606,0x10218130,0x811004,0xe0e19700,0x3898c606,0xa0618387,0x801424,0xc101d782,0x389e0606,0xd0621d30,0x811006,0xc1209802,0x389e0602,0xe0825d83,0x801006,0x70bf1a31,0x821002,0xf000068e,0x38980604,0xf0604892,0x38820606,0xf0608a96,0x38820606,0x701f1a19,0xa21001,0x2,0x2,0x80018000,0x80ff8001,0x0,0x0,0x4,0x101ff,0xfa100000,0xe0601e04,0xa01002,0x2,0x7,0x80018001,0x80048000,0x0,0x0,0x4,0x0,0x10001,0x40001,0x101,0x5a03fa10,0x10066061,0xc6030082,0x1001e0c0,0x932a0080,0x606f061,0xd3ab38ab,0x606f061,0x942c3882,0x602f060,0x1a293882,0x1002709f,0x200a2,0xc0000,0x80010000,
0x80008001,0x8001,0x0,0x40000,0x10000,0x10001,0x10001,0x10001,0x10001,0x10001,0x101,0x1936fa10,0x606f062,0x59b738ab,0x606f062,0x1a383882,0x602f060,0x5ab93882,0x402f060,0x1a0038b2,0x10077001,0x5a03008b,0x10076021,0xc50b008a,0x201f080,0x79038a2,0x605f0a0,0x49943898,0x606f000,0x8b983882,0x606f000,0x1a1b3882,0x1001705f,0x600a2,0x3c000000,0x803f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x803f,0x6e690f00,0x74726556,0x7865,0x40400,0x100,0x4000001,0x700,0x505f6c67,0x7469736f,0x6e6f69,0x5050100,0x10000,0x100,0xf0004,0x50564d00,0x7274614d,0x7869,0x31600,0x100,0x10040001,0xffff,0x6f4e6e69,0x6c616d72,0x4000000,0x1000004,0x10000,0x7000404,0x6f4d0000,0x6c6564,0x3120000,0x10000,0x14000100,0x77070c,
0x72416300,0x5000000,0x1000003,0x10000,0xf000420,0x41630000,0x67,0x305,0x1000001,0x42400,0x6300000f,0x6241,0x30500,0x100,0x4280001,0xf00,0x724263,0x3050000,0x10000,0x2c000100,0xf0004,0x67426300,0x5000000,0x1000003,0x10000,0xf000430,0x42630000,0x62,0x305,0x1000001,0x43400,0x6300000f,0x43,0x304,0x1000001,0x30100,0x4c000007,0x74686769,0x6f6c6f43,0x7275,0x50500,0x100,0x4000001,0xf00,0x43786554,0x64726f6f,0x3000000,0x1000005,0x10000,0x3000204,0x6e690000,0x43786554,0x64726f6f,0x3000000,0x1000004,0x10000,0x3000408,0x0,
};

// Register SHVertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_SHVertShader_vsc("SHVertShader.vsc", _SHVertShader_vsc, 1766);

// ******** End: SHVertShader.vsc ********

