// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsh ********

// File data
static const char _VertShader_vsh[] = 
	"attribute highp   vec3  inVertex;\r\n"
	"attribute mediump vec3  inNormal;\r\n"
	"\r\n"
	"uniform highp   mat4  MVPMatrix;\r\n"
	"uniform mediump vec3  LightDirModel;\r\n"
	"uniform mediump vec3  EyePosModel;\r\n"
	"uniform         bool  bSpecular;\r\n"
	"uniform\t\t\tbool  bRotate;\r\n"
	"\r\n"
	"varying lowp    float  SpecularIntensity;\r\n"
	"varying mediump vec2   RefractCoord;\r\n"
	"\r\n"
	"const mediump float  cShininess = 3.0;\r\n"
	"const mediump float  cRIR = 1.015;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// Transform position\r\n"
	"\tgl_Position = MVPMatrix * vec4(inVertex, 1.0);\r\n"
	"\t\r\n"
	"\t// Eye direction in model space\r\n"
	"\tmediump vec3 eyeDirModel = normalize(inVertex - EyePosModel);\t\r\n"
	"\t\r\n"
	"\t// GLSL offers a nice built-in refaction function\r\n"
	"\t// Calculate refraction direction in model space\r\n"
	"\tmediump vec3 refractDir = refract(eyeDirModel, inNormal, cRIR);\r\n"
	"\t\r\n"
	"\t// Project refraction\r\n"
	"\trefractDir = (MVPMatrix * vec4(refractDir, 0.0)).xyw;\r\n"
	"\r\n"
	"\t// Map refraction direction to 2d coordinates\r\n"
	"\tRefractCoord = 0.5 * (refractDir.xy / refractDir.z) + 0.5;\r\n"
	"\r\n"
	"\tif(bRotate) // If the screen is rotated then rotate the uvs\r\n"
	"\t{\r\n"
	"\t\tRefractCoord.xy = RefractCoord.yx;\r\n"
	"\t\tRefractCoord.y = -RefractCoord.y;\r\n"
	"\t}\r\n"
	"\t\t\r\n"
	"\t// Specular lighting\r\n"
	"\t// We ignore that N dot L could be negative (light coming \r\n"
	"\t// from behind the surface)\r\n"
	"\tSpecularIntensity = 0.0;\r\n"
	"\r\n"
	"\tif (bSpecular)\r\n"
	"\t{\r\n"
	"\t\tmediump vec3 halfVector = normalize(LightDirModel + eyeDirModel);\r\n"
	"\t\tlowp float NdotH = max(dot(inNormal, halfVector), 0.0);\t\t\r\n"
	"\t\tSpecularIntensity = pow(NdotH, cShininess);\r\n"
	"\t}\r\n"
	"}";

// Register VertShader.vsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsh("VertShader.vsh", _VertShader_vsh, 1457);

// ******** End: VertShader.vsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: VertShader.vsc ********

// File data
A32BIT _VertShader_vsc[] = {
0x10fab438,0x20964c07,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0xcb070000,0x0,0x4000000,0x0,0x19000000,0x202,0x0,0x1020000,0x0,0x0,0xd2050000,0x55535020,0x17,0x5c6,0x1,0x0,0x80c,0x4,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x76000a,0xffff,0x90007,0x0,0x200000,0x0,0x0,0x0,0x0,0xfffc0000,0x0,0x0,0x0,0x20000,0xffffffff,0x1d0005,0x20007,0x18,0x20000,0x19,0x20010,0x1001a,0x20000,0x1001b,0x10010,0x20004,0x10000,0x30005,0x10000,0x40007,0x10000,0x50008,
0x10000,0x60009,0x10000,0x7000b,0x10000,0x8000c,0x10000,0x9000d,0x10000,0xa000f,0x10000,0xb0010,0x10000,0xc0011,0x10000,0xd0013,0x20000,0xe0014,0x20000,0xe0015,0x20010,0xf0024,0x20000,0xf0025,0x10010,0x100006,0x10000,0x11000a,0x10000,0x12000e,0x10000,0x130012,0x20000,0x140016,0x20000,0x140017,0x10010,0x15001c,0x10000,0x16001e,0x20000,0x170026,0x20000,0x170027,0x20010,0x180028,0x20000,0x180029,0x18000010,0x1bbe6460,0xcab04083,0x10069488,0x2a300081,0x100694b5,0xcb3000c1,0x100694c8,0xcbb00081,0x10069468,0x770081,0x40000,0x20000,0x2,0x1a,0x80018001,
0x80018001,0x0,0x0,0x0,0x0,0x0,0x0,0x10001,0x10001,0x10000,0x10001,0x10001,0x1,0x0,0x0,0x0,0x70401a70,0xc2100c,0x70605a71,0xc2100c,0x70009a7c,0xc2100c,0x608183,0x801402,0x20600003,0x801002,0x80200180,0x8801200,0x110000b0,0x811000,0xf0600d0e,0x38ab0606,0xf0604d91,0x38820606,0xf0608e14,0x38820606,0x705f1a1d,0x821001,0x707f5a17,0x821001,0x604103,0x38ab0602,0xe0200080,0x28831000,0xa0614200,0x38a0c006,0xf000060d,0x38880604,0xf0004790,0x38820606,0xf0008913,0x38820606,0x701f1a15,0xa21001,0x20218403,0x801006,0x900040b4,0x811086,0xd00012b4,0x811026,0x90000030,0x48891681,0x60801800,0x2d831000,
0x60801a00,0x29831000,0x10000230,0x48891281,0x3,0x0,0xf9000040,0x20003,0x90000,0x80010000,0x80018001,0x8001,0x0,0x0,0x0,0x10000,0x10001,0x10001,0x80000000,0x8801202,0x80000000,0x8801002,0xe0206a00,0xc01006,0xd0002a30,0xc91003,0xd0206a30,0xc91003,0xd0022a30,0xc11002,0xa0e04300,0x801084,0xa0a04205,0x38a20284,0xe0c00080,0x28831000,0x4,0x20003,0x20000,0x80000000,0x80038003,0x8001,0x0,0x40000,0x3010000,0x3,0x705fa10,0x2002c000,0x210a0,0x80000,0x80ff0000,0x80028001,0x8000,0x0,0x40000,0x0,0x0,0x10001,0x2000001,0xff01,0x1a23fa10,0x10067000,0x82,0x10028040,
0xfb00880,0x1281d000,0x460d4889,0x602f001,0x879038ab,0x602f001,0xc9133882,0x602f001,0x12023882,0x1202e03f,0x200a0,0x20000,0x80010000,0x800080ff,0x8000,0x0,0x40000,0x0,0x1ff,0x6bd7fa10,0x1005f080,0x300e0,0x0,0x400000,0x5fd00,0x2,0x4,0x80ff8001,0x80008000,0x0,0x0,0x0,0x0,0x60000280,0x28811002,0x60a00200,0x28811001,0xa0800000,0x28811001,0x50a002b4,0x10811021,0x4,0x20005,0x20000,0x80010000,0x800080ff,0x8000,0x0,0x0,0x18000000,0x100160c0,0x10302883,0x1281d000,0x34889,0x0,0x400000,0x7fd00,0x2,0x2,0x80ff8001,0x80008000,0x0,0x0,0x0,
0x70601a72,0xc21002,0x70405a73,0xc21002,0x2,0x2,0x80ff8001,0x80008000,0x0,0x420000,0x4,0x42,0xfb100000,0x70221a40,0xc21002,0x2,0xa,0x80ff8001,0x80008000,0x0,0x0,0x4,0x0,0x0,0x1,0x0,0x0,0xfb100000,0xa000c102,0x801406,0xa0004080,0x801006,0x80000000,0x8801202,0x90204030,0x811006,0xa0000182,0x38ab0606,0xa0014200,0x38a0c006,0xa0018080,0x801006,0x90000030,0x18811202,0x80000000,0x8801442,0x2,0x2,0x80ff8001,0x80008000,0x0,0x44,0x4,0x44000,0xfb100000,0xd0002030,0xc11006,0x2,0x2,0x80ff8001,0x80008000,0x0,0x0,0x4,
0x0,0xfb100000,0x80c00000,0x8801601,0x4,0x60007,0x2c000000,0x803f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x803f,0x85eb813f,0x0,0x0,0x3f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x4040,0x0,0x0,0x0,0x6e690a00,0x74726556,0x7865,0x40400,0x100,0x4000001,0x700,0x505f6c67,0x7469736f,0x6e6f69,0x5050100,0x10000,0x100,
0xf0004,0x50564d00,0x7274614d,0x7869,0x31600,0x100,0x10040001,0xffff,0x50657945,0x6f4d736f,0x6c6564,0x3040000,0x10000,0x14000100,0x70003,0x4e6e6900,0x616d726f,0x6c,0x404,0x1000001,0x40400,0x52000007,0x61726665,0x6f437463,0x64726f,0x5030000,0x10000,0x100,0x30002,0x6f526200,0x65746174,0xa000000,0x1000003,0x10000,0x100011c,0x70530000,0x6c756365,0x6e497261,0x736e6574,0x797469,0x5020000,0x10000,0x4000100,0x10001,0x70536200,0x6c756365,0x7261,0x30a00,0x100,0x11e0001,0x100,0x6867694c,0x72694474,0x65646f4d,0x6c,0x304,0x1000001,0x32400,0x7,
};

// Register VertShader.vsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_VertShader_vsc("VertShader.vsc", _VertShader_vsc, 2027);

// ******** End: VertShader.vsc ********

