// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsh ********

// File data
static const char _FragShader_fsh[] = 
	"uniform sampler2D  sTexture;\r\n"
	"\r\n"
	"uniform lowp vec3  FogColor;\r\n"
	"\r\n"
	"varying mediump vec2  TexCoord;\r\n"
	"varying lowp    vec3  DiffuseLight;\r\n"
	"varying lowp    vec3  FogIntensity;\r\n"
	"\r\n"
	"void main()\r\n"
	"{\r\n"
	"\t// Get color from the texture and modulate with diffuse lighting\r\n"
	"    lowp vec3 texColor  = texture2D(sTexture, TexCoord).rgb;\r\n"
	"    lowp vec3 color = texColor * DiffuseLight;\r\n"
	"\t\r\n"
	"\t// interpolate the fog color with the texture-diffuse color using the \r\n"
	"\t// fog intensity calculated in the vertex shader\r\n"
	"\tcolor = mix(FogColor, color, FogIntensity);\r\n"
	"\tgl_FragColor = vec4(color, 1.0);\r\n"
	"}\r\n";

// Register FragShader.fsh in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsh("FragShader.fsh", _FragShader_fsh, 577);

// ******** End: FragShader.fsh ********

// This file was created by Filewrap 1.1
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: FragShader.fsc ********

// File data
A32BIT _FragShader_fsc[] = {
0x10fab438,0x5133f08d,0x30050100,0x2101,0xa9142cc2,0x0,0x0,0x9a030000,0x1000000,0x4000000,0x0,0x38000000,0x20303,0x0,0x1010000,0x2,0x0,0x5c010000,0x55535020,0x17,0x150,0x1,0x0,0x848,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x770009,0xffff,0x3,0x0,0x30003,0x0,0x0,0x0,0x0,0xfffc0000,0x10003,0x10004,0x0,0x20000,0xffffffff,0x10000,0x60000,0x10000,0x30003,0x0,0x3,0x60000,0x20000,0x30003,0x3,0x140000,0x10003,0xa0000,0x20003,0x0,0x4,0x20002,
0x10000,0x80010002,0x80018001,0x8001,0x0,0x40000,0x100,0xfd100000,0x5,0x20001,0x80018001,0x80018001,0x0,0x0,0x0,0x70007,0x3060a,0x30003,0x10003,0x10001,0x40001,0x40004,0x4,0x20001,0x10003,0x30000,0x20002,0x30000,0x80010002,0x80018001,0x8001,0x0,0x0,0x100012,0xa80000c0,0x90807182,0xe030a4c0,0x89803526,0x60201c00,0x91830802,0x6,0x64010000,0x55535020,0x17,0x158,0x1,0x0,0x948,0x0,0x2,0x79,0x0,0x8,0x0,0xffffffff,0x0,0x770009,0xffff,0x10003,0x0,0x30003,0x0,0x0,0x0,
0x0,0xfffc0000,0x1,0x10004,0x0,0x20000,0xffffffff,0x20001,0x60000,0x10000,0x30003,0x0,0x3,0x60000,0x20000,0x30003,0x3,0x140000,0x10003,0xa0000,0x20003,0x0,0x61401c00,0x91837802,0x4,0x20002,0x10000,0x80010002,0x80018001,0x8001,0x0,0x40000,0x100,0xfd100000,0x5,0x20001,0x80018001,0x80018001,0x0,0x0,0x0,0x70007,0x3060a,0x30003,0x10003,0x10001,0x40001,0x40004,0x4,0x20001,0x10003,0x30001,0x20002,0x30000,0x80010002,0x80018001,0x8001,0x0,0x0,0x100012,0xa80000c0,0x90807980,0xc010a4c0,0x89803524,
0xe0030500,0x40811020,0x6,0x800,0x0,0x0,0x0,0x0,0x0,0x0,0x803f0000,0x5000000,0x78655473,0x65727574,0x18000000,0x1000003,0x20000,0x1000100,0x65540000,0x6f6f4378,0x6472,0x50300,0x100,0x2080001,0x300,0x66666944,0x4c657375,0x74686769,0x4000000,0x1000005,0x10000,0x7000300,0x6f460000,0x6c6f4367,0x726f,0x30400,0x100,0x4000001,0x700,0x49676f46,0x6e65746e,0x79746973,0x4000000,0x1000005,0x10000,0x7000304,0x0,
};

// Register FragShader.fsc in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_FragShader_fsc("FragShader.fsc", _FragShader_fsc, 954);

// ******** End: FragShader.fsc ********

