#ifndef render_states_H
#define render_states_H

#define NUM_UNIFORM_BUFFER_BP      3 // number of uniform-buffer binding points, used in this demo
#define NUM_TEXTURE_BP             9 // number of texture binding points, used in this demo
#define NUM_STRUCTURED_BUFFER_BP   2 // number of structured-buffer binding points, used in this demo
#define NUM_SHADER_TYPES           4 // number of shader types, used in this demo

// uniform-buffer binding points
enum uniformBufferBP
{
	CAMERA_UB_BP=0,
	LIGHT_UB_BP,
	CUSTOM_UB_BP
};

// texture binding points
enum textureBP
{
	COLOR_TEX_BP=0,
	NORMAL_TEX_BP,
	SPECULAR_TEX_BP,
	CUSTOM0_TEX_BP,
	CUSTOM1_TEX_BP,
	CUSTOM2_TEX_BP,
	CUSTOM3_TEX_BP,
	CUSTOM4_TEX_BP,
	CUSTOM5_TEX_BP,
};

// structured-buffer binding points
enum structuredBufferBP
{
	CUSTOM_SB0_BP=9,
	CUSTOM_SB1_BP=10
};

enum shaderTypes
{
  VERTEX_SHADER=0,
	GEOMETRY_SHADER,
	FRAGMENT_SHADER,
	COMPUTE_SHADER
};

enum blendOptions
{
	ZERO_BLEND            = D3D11_BLEND_ZERO, 
	ONE_BLEND             = D3D11_BLEND_ONE,
	SRC_COLOR_BLEND       = D3D11_BLEND_SRC_COLOR,
	INV_SRC_COLOR_BLEND   = D3D11_BLEND_INV_SRC_COLOR, 
	DST_COLOR_BLEND       = D3D11_BLEND_DEST_COLOR, 
	INV_DST_COLOR_BLEND   = D3D11_BLEND_INV_DEST_COLOR,
	SRC_ALPHA_BLEND       = D3D11_BLEND_SRC_ALPHA,
	INV_SRC_ALPHA_BLEND   = D3D11_BLEND_INV_SRC_ALPHA, 
	DST_ALPHA_BLEND       = D3D11_BLEND_DEST_ALPHA, 
	INV_DST_ALPHA_BLEND   = D3D11_BLEND_INV_DEST_ALPHA, 
	CONST_COLOR_BLEND     = D3D11_BLEND_BLEND_FACTOR, 
	INV_CONST_COLOR_BLEND = D3D11_BLEND_INV_BLEND_FACTOR, 
	CONST_ALPHA_BLEND     = D3D11_BLEND_BLEND_FACTOR, 
	INV_CONST_ALPHA_BLEND = D3D11_BLEND_INV_BLEND_FACTOR,
	SRC_ALPHA_SAT_BLEND   = D3D11_BLEND_SRC_ALPHA_SAT,
	SRC1_COLOR_BLEND      = D3D11_BLEND_SRC1_COLOR,
	INV_SRC1_COLOR_BLEND  = D3D11_BLEND_INV_SRC1_COLOR,
	SRC1_ALPHA_BLEND      = D3D11_BLEND_SRC1_ALPHA,
	INV_SRC1_ALPHA_BLEND  = D3D11_BLEND_INV_SRC1_ALPHA 
};

enum blendOps
{ 
	ADD_BLEND_OP          = D3D11_BLEND_OP_ADD,
	SUBTRACT_BLEND_OP     = D3D11_BLEND_OP_SUBTRACT,
	REV_SUBTRACT_BLEND_OP = D3D11_BLEND_OP_REV_SUBTRACT,
	MIN_BLEND_OP          = D3D11_BLEND_OP_MIN,
	MAX_BLEND_OP          = D3D11_BLEND_OP_MAX
};

enum colorMaskBits
{	
	RED_COLOR_MASK   = D3D11_COLOR_WRITE_ENABLE_RED,
	GREEN_COLOR_MASK = D3D11_COLOR_WRITE_ENABLE_GREEN,
	BLUE_COLOR_MASK  = D3D11_COLOR_WRITE_ENABLE_BLUE,
	ALPHA_COLOR_MASK = D3D11_COLOR_WRITE_ENABLE_ALPHA,
	ALL_COLOR_MASK   = D3D11_COLOR_WRITE_ENABLE_ALL
};

enum clearBits
{
	DEPTH_CLEAR_BIT   = D3D11_CLEAR_DEPTH,
	STENCIL_CLEAR_BIT = D3D11_CLEAR_STENCIL,
	COLOR_CLEAR_BIT   = 4
};

enum comparisonFuncs
{
	NEVER_COMP_FUNC    = D3D11_COMPARISON_NEVER,
	LESS_COMP_FUNC     = D3D11_COMPARISON_LESS,
	LEQUAL_COMP_FUNC   = D3D11_COMPARISON_LESS_EQUAL,
	EQUAL_COMP_FUNC    = D3D11_COMPARISON_EQUAL,
	GREATER_COMP_FUNC  = D3D11_COMPARISON_GREATER,
	NOTEQUAL_COMP_FUNC = D3D11_COMPARISON_NOT_EQUAL,
	GEQUAL_COMP_FUNC   = D3D11_COMPARISON_GREATER_EQUAL,
	ALWAYS_COMP_FUNC   = D3D11_COMPARISON_ALWAYS
};

enum stencilOps
{
	KEEP_STENCIL_OP     = D3D11_STENCIL_OP_KEEP,
	ZERO_STENICL_OP     = D3D11_STENCIL_OP_ZERO,
	REPLACE_STENCIL_OP  = D3D11_STENCIL_OP_REPLACE,
	INCR_SAT_STENCIL_OP = D3D11_STENCIL_OP_INCR_SAT,
	DECR_SAT_STENCIL_OP = D3D11_STENCIL_OP_DECR_SAT,
	INVERT_STENICL_OP   = D3D11_STENCIL_OP_INVERT,
	INCR_STENCIL_OP     = D3D11_STENCIL_OP_INCR,
	DECR_STENCIL_OP     = D3D11_STENCIL_OP_DECR
};

enum fillModes
{
	SOLID_FILL     = D3D11_FILL_SOLID,
	WIREFRAME_FILL = D3D11_FILL_WIREFRAME
};

enum cullModes
{
	NONE_CULL  = D3D11_CULL_NONE,
	FRONT_CULL = D3D11_CULL_FRONT, 
	BACK_CULL  = D3D11_CULL_BACK 
};

enum filterModes
{
	MIN_MAG_POINT_FILTER                   			= D3D11_FILTER_MIN_MAG_MIP_POINT, 
	MIN_POINT_MAG_LINEAR_FILTER            			= D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT,
	MIN_LINEAR_MAG_POINT_FILTER            			= D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT, 
	MIN_MAG_LINEAR_FILTER                  			= D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT, 
	MIN_MAG_MIP_POINT_FILTER               			= D3D11_FILTER_MIN_MAG_MIP_POINT,
	MIN_MAG_POINT_MIP_LINEAR_FILTER        			= D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR,     
	MIN_POINT_MAG_LINEAR_MIP_POINT_FILTER  			= D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT,
	MIN_POINT_MAG_MIP_LINEAR_FILTER        			= D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR,
	MIN_LINEAR_MAG_MIP_POINT_FILTER        			= D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT, 
	MIN_LINEAR_MAG_POINT_MIP_LINEAR_FILTER 			= D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
	MIN_MAG_LINEAR_MIP_POINT_FILTER        			= D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT, 
	MIN_MAG_MIP_LINEAR_FILTER              			= D3D11_FILTER_MIN_MAG_MIP_LINEAR, 
	ANISOTROPIC_FILTER                     			= D3D11_FILTER_ANISOTROPIC,
	COMP_MIN_MAG_POINT_FILTER              			= D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT,
	COMP_MIN_POINT_MAG_LINEAR_FILTER       			= D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,
	COMP_MIN_LINEAR_MAG_POINT_FILTER       			= D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT,
	COMP_MIN_MAG_LINEAR_FILTER             			= D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT,
	COMP_MIN_MAG_MIP_POINT_FILTER          			= D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT,
	COMP_MIN_MAG_POINT_MIP_LINEAR_FILTER        = D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR,  
	COMP_MIN_POINT_MAG_LINEAR_MIP_POINT_FILTER  = D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,
	COMP_MIN_POINT_MAG_MIP_LINEAR_FILTER        = D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR,
	COMP_MIN_LINEAR_MAG_MIP_POINT_FILTER        = D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT,
	COMP_MIN_LINEAR_MAG_POINT_MIP_LINEAR_FILTER = D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
	COMP_MIN_MAG_LINEAR_MIP_POINT_FILTER        = D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT,
	COMP_MIN_MAG_MIP_LINEAR_FILTER              = D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR,
	COMP_ANISOTROPIC_FILTER                     = D3D11_FILTER_COMPARISON_ANISOTROPIC
};

enum texAdressModes
{
	REPEAT_TEX_ADDRESS = D3D11_TEXTURE_ADDRESS_WRAP,
	MIRROR_TEX_ADDRESS = D3D11_TEXTURE_ADDRESS_MIRROR,
	CLAMP_TEX_ADRESS   = D3D11_TEXTURE_ADDRESS_CLAMP,
	BORDER_TEX_ADDRESS = D3D11_TEXTURE_ADDRESS_BORDER
};

enum primitiveTypes
{
	POINTS_PRIMITIVE         = D3D11_PRIMITIVE_TOPOLOGY_POINTLIST, 
	LINES_PRIMITIVE          = D3D11_PRIMITIVE_TOPOLOGY_LINELIST,
	LINE_STRIP_PRIMITIVE     = D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP, 
	TRIANGLES_PRIMITIVE      = D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST,
	TRIANGLE_STRIP_PRIMITIVE = D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP,   
	PATCH_1_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST,
	PATCH_2_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST,   
	PATCH_3_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST,   
	PATCH_4_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST,   
	PATCH_5_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST,  
	PATCH_6_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST,   
	PATCH_7_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST,   
	PATCH_8_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST,   
	PATCH_9_PRIMITIVE        = D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST,  	
	PATCH_10_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST, 
	PATCH_11_PRIMITIVE		   =	D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST,  
	PATCH_12_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST,  
	PATCH_13_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST,  
	PATCH_14_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST,  
	PATCH_15_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST,  
	PATCH_16_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST,  
	PATCH_17_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST,  
	PATCH_18_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST,  
	PATCH_19_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST,  
	PATCH_20_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST,  
	PATCH_21_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST,  
	PATCH_22_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST,  
	PATCH_23_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST,  
	PATCH_24_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST,  
	PATCH_25_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST,  
	PATCH_26_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST,  
	PATCH_27_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST,  
	PATCH_28_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST,  
	PATCH_29_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST,  
	PATCH_30_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST,  
	PATCH_31_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST, 
	PATCH_32_PRIMITIVE			 =	D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST
};

enum texFormats 
{
	TEX_FORMAT_NONE    = DXGI_FORMAT_UNKNOWN,
	TEX_FORMAT_A8      = DXGI_FORMAT_A8_UNORM,
	TEX_FORMAT_I8      = DXGI_FORMAT_R8_UNORM,
	TEX_FORMAT_IA8     = DXGI_FORMAT_R8G8_UNORM,
	TEX_FORMAT_BGR8    = DXGI_FORMAT_B8G8R8X8_UNORM,
	TEX_FORMAT_BGRA8   = DXGI_FORMAT_B8G8R8A8_UNORM,
	TEX_FORMAT_RGB8    = DXGI_FORMAT_R8G8B8A8_SNORM,
	TEX_FORMAT_RGBA8   = DXGI_FORMAT_R8G8B8A8_UNORM,
	TEX_FORMAT_RGBA32  = DXGI_FORMAT_R32G32B32A32_UINT,
	TEX_FORMAT_I16     = DXGI_FORMAT_R16_UNORM,
	TEX_FORMAT_IA16    = DXGI_FORMAT_R16G16_UNORM,
	TEX_FORMAT_I32     = DXGI_FORMAT_R32_UINT,
	TEX_FORMAT_RGB16   = DXGI_FORMAT_R16G16B16A16_UNORM,
	TEX_FORMAT_RGBA16  = DXGI_FORMAT_R16G16B16A16_UNORM,
	TEX_FORMAT_RGB16F  = DXGI_FORMAT_R16G16B16A16_FLOAT,
	TEX_FORMAT_RGBA16F = DXGI_FORMAT_R16G16B16A16_FLOAT,
	TEX_FORMAT_RGB32F  = DXGI_FORMAT_R32G32B32_FLOAT,
	TEX_FORMAT_RGBA32F = DXGI_FORMAT_R32G32B32A32_FLOAT,
	TEX_FORMAT_I16F    = DXGI_FORMAT_R16_FLOAT,
	TEX_FORMAT_RG16F   = DXGI_FORMAT_R16G16_FLOAT, 
	TEX_FORMAT_I32F    = DXGI_FORMAT_R32_FLOAT,
	TEX_FORMAT_IA32F   = DXGI_FORMAT_R32G32_FLOAT,
	TEX_FORMAT_UV8     = DXGI_FORMAT_R8G8_SNORM,
	TEX_FORMAT_UVWQ8   = DXGI_FORMAT_R8G8B8A8_SNORM,
	TEX_FORMAT_UV16    = DXGI_FORMAT_R16G16_SNORM,
	TEX_FORMAT_UVWQ16  = DXGI_FORMAT_R16G16B16A16_SNORM,
	TEX_FORMAT_DEPTH16 = DXGI_FORMAT_R16_TYPELESS,
	TEX_FORMAT_DEPTH24 = DXGI_FORMAT_R24G8_TYPELESS,
	TEX_FORMAT_RGB565  = DXGI_FORMAT_B5G6R5_UNORM,
	TEX_FORMAT_RGB5A1  = DXGI_FORMAT_B5G5R5A1_UNORM,
	TEX_FORMAT_RGB10A2 = DXGI_FORMAT_R10G10B10A2_UNORM,
	TEX_FORMAT_UVW10A2 = DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM,
	TEX_FORMAT_DXT1    = DXGI_FORMAT_BC1_UNORM,
	TEX_FORMAT_DXT3    = DXGI_FORMAT_BC2_UNORM,
	TEX_FORMAT_DXT5    = DXGI_FORMAT_BC3_UNORM,
	TEX_FORMAT_ATI1N   = DXGI_FORMAT_BC4_UNORM,
	TEX_FORMAT_ATI2N   = DXGI_FORMAT_BC5_UNORM
};

#endif