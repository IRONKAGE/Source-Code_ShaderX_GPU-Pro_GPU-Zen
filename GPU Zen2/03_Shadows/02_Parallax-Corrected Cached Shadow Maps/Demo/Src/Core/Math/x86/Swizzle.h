// Both AMD K10/12 and Intel Core iX can issue two SSE2-shuffles per clock, so use INT-shuffle
// where possible.

#ifdef ENABLE_SSE2

#define SWZ(a, b)   _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), b))
#define SWZ_XXXX(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(0,0,0,0)))
#define SWZ_YYYY(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(1,1,1,1)))
#define SWZ_ZZZZ(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(2,2,2,2)))
#define SWZ_WWWW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,3,3,3)))
#define SWZ_YZXW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,0,2,1)))
#define SWZ_ZXYW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,1,0,2)))
#define SWZ_YXXX(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(0,0,0,1)))
#define SWZ_ZZYY(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(1,1,2,2)))
#define SWZ_WWWZ(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(2,3,3,3)))
#define SWZ_XXZW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,2,0,0)))
#define SWZ_ZZYW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,1,2,2)))
#define SWZ_YWZY(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(1,2,3,1)))
#define SWZ_XWYX(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(0,1,3,0)))
#define SWZ_YXXW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,0,0,1)))
#define SWZ_WZYX(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(0,1,2,3)))
#define SWZ_ZWXY(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(1,0,3,2)))
#define SWZ_YXWZ(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(2,3,0,1)))
#define SWZ_WXXX(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(0,0,0,3)))
#define SWZ_XWXX(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(0,0,3,0)))
#define SWZ_XXWX(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(0,3,0,0)))
#define SWZ_XWWW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,3,3,0)))
#define SWZ_WYWW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,3,1,3)))
#define SWZ_WWZW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,2,3,3)))
#define SWZ_XXXW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,0,0,0)))
#define SWZ_ZYXW(a) _mm_castsi128_ps(_mm_shuffle_epi32(_mm_castps_si128(a), _MM_SHUFFLE(3,0,1,2)))
#define SWZ_XX(a)   _mm_castsi128_pd(_mm_shuffle_epi32(_mm_castpd_si128(a), _MM_SHUFFLE(1,0,1,0)))
#define SWZ_YY(a)   _mm_castsi128_pd(_mm_shuffle_epi32(_mm_castpd_si128(a), _MM_SHUFFLE(3,2,3,2)))
#define SWZ_YX(a)   _mm_castsi128_pd(_mm_shuffle_epi32(_mm_castpd_si128(a), _MM_SHUFFLE(1,0,3,2)))

#else

#define SWZ(a, b)   _mm_shuffle_ps(a, a, b)
#define SWZ_XXXX(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(0,0,0,0))
#define SWZ_YYYY(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(1,1,1,1))
#define SWZ_ZZZZ(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(2,2,2,2))
#define SWZ_WWWW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,3,3,3))
#define SWZ_YZXW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,0,2,1))
#define SWZ_ZXYW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,1,0,2))
#define SWZ_YXXX(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(0,0,0,1))
#define SWZ_ZZYY(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(1,1,2,2))
#define SWZ_WWWZ(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(2,3,3,3))
#define SWZ_XXZW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,2,0,0))
#define SWZ_ZZYW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,1,2,2))
#define SWZ_YWZY(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(1,2,3,1))
#define SWZ_XWYX(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(0,1,3,0))
#define SWZ_YXXW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,0,0,1))
#define SWZ_WZYX(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(0,1,2,3))
#define SWZ_ZWXY(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(1,0,3,2))
#define SWZ_YXWZ(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(2,3,0,1))
#define SWZ_WXXX(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(0,0,0,3))
#define SWZ_XWXX(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(0,0,3,0))
#define SWZ_XXWX(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(0,3,0,0))
#define SWZ_XWWW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,3,3,0))
#define SWZ_WYWW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,3,1,3))
#define SWZ_WWZW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,2,3,3))
#define SWZ_XXXW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,0,0,0))
#define SWZ_ZYXW(a) _mm_shuffle_ps(a, a, _MM_SHUFFLE(3,0,1,2))

#endif
