#include "Vector4.h"

#include "Math.h"

// template specialization of the static members for the float datatype
const Vector4 Vector4::ZERO(0.0f, 0.0f, 0.0f, 0.0f);
const Vector4 Vector4::X_AXIS(1.0f, 0.0f, 0.0f, 0.0f);
const Vector4 Vector4::Y_AXIS(0.0f, 1.0f, 0.0f, 0.0f);
const Vector4 Vector4::Z_AXIS(0.0f, 0.0f, 1.0f, 0.0f);
const Vector4 Vector4::W_AXIS(0.0f, 0.0f, 0.0f, 1.0f);

// -----------------------------------------------------------------------------
// ------------------------------ Vector4::Vector4 -----------------------------
// -----------------------------------------------------------------------------
Vector4::Vector4() :
    x(0), y(0), z(0), w(0)
{
}

// -----------------------------------------------------------------------------
// ------------------------------ Vector4::Vector4 -----------------------------
// -----------------------------------------------------------------------------
Vector4::Vector4(float _x, float _y, float _z, float _w) : 
	x(_x), y(_y), z(_z), w(_w)
{
}

// -----------------------------------------------------------------------------
// ------------------------------ Vector4::Vector4 -----------------------------
// -----------------------------------------------------------------------------
Vector4::Vector4(const Vector4& other) : 
	x(other.x), y(other.y), z(other.z), w(other.w)
{
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator= ----------------------------
// -----------------------------------------------------------------------------
const Vector4& Vector4::operator=(const Vector4& other)
{
	if ((&other == this)||(other == *this))
		return (*this);

	x = other.x;
	y = other.y;
	z = other.z;
	w = other.w;
	return (*this);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator== ----------------------------
// -----------------------------------------------------------------------------
bool Vector4::operator==(const Vector4& other) const
{
	return ((x == other.x) && (y == other.y) && (z == other.z) && (w == other.w));
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator!= ----------------------------
// -----------------------------------------------------------------------------
bool Vector4::operator!=(const Vector4& other) const
{
	return ((x != other.x) || (y != other.y) || (z != other.z) || (w != other.w));
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator< ----------------------------
// -----------------------------------------------------------------------------
bool Vector4::operator<(const Vector4& other) const
{
	return (x < other.x);
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator- ----------------------------
// -----------------------------------------------------------------------------
const Vector4 Vector4::operator-() const
{
	return Vector4(-x, -y, -z, -w);
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator+ ----------------------------
// -----------------------------------------------------------------------------
const Vector4 Vector4::operator+(const Vector4& other) const
{
	return Vector4(x + other.x, y + other.y, z + other.z, w + other.w);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator+= ----------------------------
// -----------------------------------------------------------------------------
const Vector4& Vector4::operator+=(const Vector4& other)
{
	x += other.x;
	y += other.y;
	z += other.z;
	w += other.w;
	return (*this);
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator- ----------------------------
// -----------------------------------------------------------------------------
const Vector4 Vector4::operator-(const Vector4& other) const
{
	return Vector4(x - other.x, y - other.y, z - other.z, w - other.w);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator-= ----------------------------
// -----------------------------------------------------------------------------
const Vector4& Vector4::operator-=(const Vector4& other)
{
	x -= other.x;
	y -= other.y;
	z -= other.z;
	w -= other.w;
	return (*this);
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator* ----------------------------
// -----------------------------------------------------------------------------
const Vector4 Vector4::operator*(const Vector4& other) const
{
	return Vector4(x * other.x, y * other.y, z * other.z, w * other.w);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator*= ----------------------------
// -----------------------------------------------------------------------------
const Vector4& Vector4::operator*=(const Vector4& other)
{
	x *= other.x;
	y *= other.y;
	z *= other.z;
	w *= other.w;
	return (*this);
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator* ----------------------------
// -----------------------------------------------------------------------------
const Vector4 Vector4::operator*(float scalar) const
{
	return Vector4(x * scalar, y * scalar, z * scalar, w * scalar);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator*= ----------------------------
// -----------------------------------------------------------------------------
const Vector4& Vector4::operator*=(float scalar)
{
	x *= scalar;
	y *= scalar;
	z *= scalar;
	w *= scalar;
	return (*this);
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator/ ----------------------------
// -----------------------------------------------------------------------------
const Vector4 Vector4::operator/(const Vector4& other) const
{
	return Vector4(x / other.x, y / other.y, z / other.z, w / other.w);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator/= ----------------------------
// -----------------------------------------------------------------------------
const Vector4& Vector4::operator/=(const Vector4& other)
{
	x /= other.x;
	y /= other.y;
	z /= other.z;
	w /= other.w;
	return (*this);
}

// -----------------------------------------------------------------------------
// ----------------------------- Vector4::operator/ ----------------------------
// -----------------------------------------------------------------------------
const Vector4 Vector4::operator/(float scalar) const
{
	float reciprocal = 1 / scalar;
	return Vector4(x * reciprocal, y * reciprocal, z * reciprocal, w * reciprocal);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::operator/= ----------------------------
// -----------------------------------------------------------------------------
const Vector4& Vector4::operator/=(float scalar)
{
	float reciprocal = 1 / scalar;
	x *= reciprocal;
	y *= reciprocal;
	z *= reciprocal;
	w *= reciprocal;
	return (*this);
}

// -----------------------------------------------------------------------------
// ------------------------------ Vector4::Length ------------------------------
// -----------------------------------------------------------------------------
float Vector4::Length() const
{
	return Math::Sqrt( SquaredLength() );
}

// -----------------------------------------------------------------------------
// --------------------------- Vector4::SquaredLength --------------------------
// -----------------------------------------------------------------------------
float Vector4::SquaredLength() const
{
	return (x * x + y * y + z * z + w * w);
}

// -----------------------------------------------------------------------------
// ---------------------------- Vector4::DotProduct ----------------------------
// -----------------------------------------------------------------------------
float Vector4::DotProduct(const Vector4& other) const
{
	return (x * other.x + y * other.y + z * other.z + w * other.w);
}
