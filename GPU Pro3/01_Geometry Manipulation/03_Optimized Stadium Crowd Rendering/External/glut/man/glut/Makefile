# Makefile generated by imake - do not edit!
# $XConsortium: imake.c /main/88 1995/12/08 16:33:13 gildea $

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl /main/r61_main/3 1996/02/02 18:57:32 gildea $
# $XFree86: xc/config/cf/Imake.tmpl,v 3.27 1996/09/14 13:05:02 dawes Exp $
#

.SUFFIXES: .i

# $XConsortium: Imake.cf /main/22 1995/12/05 16:39:53 mor $
# $XFree86: xc/config/cf/Imake.cf,v 3.28 1996/10/16 14:28:24 dawes Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample /main/19 1995/12/14 13:03:29 matt $
# site:  $XFree86: xc/config/cf/site.def,v 3.10 1996/01/07 09:57:49 dawes Exp $

# $XFree86: xc/config/cf/xf86site.def,v 3.91 1996/10/19 15:12:30 dawes Exp $

# ----------------------------------------------------------------------
# platform-specific configuration parameters - edit linux.cf to change

# platform:  $XConsortium: linux.cf /main/18 1996/02/02 18:59:31 gildea $
# platform:  $XFree86: xc/config/cf/linux.cf,v 3.49 1996/10/19 15:12:28 dawes Exp $

# $XConsortium: lnxLib.rules /main/12 1996/01/03 14:51:18 kaleb $
# $XFree86: xc/config/cf/lnxLib.rules,v 3.24 1996/10/06 13:09:44 dawes Exp $

# $XFree86: xc/config/cf/xfree86.cf,v 3.117 1996/10/19 15:12:31 dawes Exp $

# $XConsortium: xfree86.cf /main/17 1996/01/03 14:50:55 kaleb $

LINKKITDIR = $(USRLIBDIR)/Server
XF98LINKKITDIR = $(USRLIBDIR)/Server

       XF86SRC = $(SERVERSRC)/hw/xfree86
  XF86ACCELSRC = $(XF86SRC)/accel
    XF86COMSRC = $(XF86SRC)/common
 XF86CONFIGSRC = $(XF86COMSRC)
     XF86HWSRC = $(XF86SRC)/common_hw
     XF86OSSRC = $(XF86SRC)/os-support
  VGADRIVERSRC = $(XF86SRC)/vga256/drivers
VGA16DRIVERSRC = $(XF86SRC)/vga16/drivers
 VGA2DRIVERSRC = $(XF86SRC)/vga2/drivers
 MONODRIVERSRC = $(XF86SRC)/mono/drivers
   S3DRIVERSRC = $(XF86SRC)/accel/s3/drivers
  S3VDRIVERSRC = $(XF86SRC)/accel/s3_virge/drivers

       XF68SRC = $(SERVERSRC)/hw/xfree68
    XF68COMSRC = $(XF68SRC)/common
 XF68CONFIGSRC = $(XF68COMSRC)
     XF68OSSRC = $(XF68SRC)/os-support

           XF98SRC = $(SERVERSRC)/hw/xfree98
      XF98ACCELSRC = $(XF98SRC)/accel
        XF98COMSRC = $(XF98SRC)/common
     XF98CONFIGSRC = $(XF98COMSRC)
         XF98HWSRC = $(XF98SRC)/common_hw/generic
      XF98HWNECSRC = $(XF98SRC)/common_hw/nec
    XF98HWPWSKBSRC = $(XF98SRC)/common_hw/pwskb
     XF98HWPWLBSRC = $(XF98SRC)/common_hw/pwlb
    XF98HWGA968SRC = $(XF98SRC)/common_hw/ga968
         XF98OSSRC = $(XF98SRC)/os-support
  XF98VGADRIVERSRC = $(XF98SRC)/vga256/drivers
XF98VGA16DRIVERSRC = $(XF98SRC)/vga16/drivers
 XF98VGA2DRIVERSRC = $(XF98SRC)/vga2/drivers
 XF98MONODRIVERSRC = $(XF98SRC)/mono/drivers
XF98NECS3DRIVERSRC = $(XF98SRC)/accel/s3nec/drivers
XF98PWSKBDRIVERSRC = $(XF98SRC)/accel/s3pwskb/drivers
 XF98PWLBDRIVERSRC = $(XF98SRC)/accel/s3pwlb/drivers
XF98GA968DRIVERSRC = $(XF98SRC)/accel/s3ga968/drivers

        XFREE86DOCDIR = $(LIBDIR)/doc
      XFREE86PSDOCDIR = $(XFREE86DOCDIR)/PostScript
    XFREE86HTMLDOCDIR = $(XFREE86DOCDIR)/html
XFREE86JAPANESEDOCDIR = $(XFREE86DOCDIR)/Japanese

# $XConsortium: xf86.rules,v 1.7 95/01/25 16:34:39 kaleb Exp $
# $XFree86: xc/config/cf/xf86.rules,v 3.15 1996/09/24 13:48:46 dawes Exp $

# ----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample /main/19 1995/12/14 13:03:29 matt $
# site:  $XFree86: xc/config/cf/site.def,v 3.10 1996/01/07 09:57:49 dawes Exp $

# ---------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules /main/208 1996/01/17 11:08:27 kaleb $
# rules:  $XFree86: xc/config/cf/Imake.rules,v 3.27 1996/09/01 04:12:46 dawes Exp $

 _NULLCMD_ = @ echo -n

          PATHSEP = /
            SHELL = /bin/sh

              TOP = ../../../../../../../../../../../../../../../../../../../../../../../..
      CURRENT_DIR = man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/man/glut

            IMAKE = imake
           DEPEND = gccmakedep
        MKDIRHIER = mkdir -p
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/util

          INCROOT = /usr/X11R6/include
        USRLIBDIR = /usr/X11R6/lib
        VARLIBDIR = /var/lib
         SHLIBDIR = /usr/X11R6/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)5

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = gcc
               AS = as

.SUFFIXES: .cxx

              CXX = c++
    CXXDEBUGFLAGS = -O2 -fno-strength-reduce -m486
 CXXEXTRA_DEFINES =
CXXEXTRA_INCLUDES =
   CXXSTD_DEFINES = -Dlinux -D__i386__ -D_POSIX_SOURCE -D_BSD_SOURCE -D_SVID_SOURCE -DX_LOCALE
       CXXOPTIONS =
      CXXINCLUDES = $(INCLUDES) $(TOP_INCLUDES) $(CXXEXTRA_INCLUDES)
       CXXDEFINES = $(CXXINCLUDES) $(CXXSTD_DEFINES) $(THREADS_CXXDEFINES) $(CXXEXTRA_DEFINES)
         CXXFLAGS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(THREADS_CXXFLAGS) $(CXXDEFINES)

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = flex -l
           LEXLIB = -lfl
             YACC = bison -y
           CCYACC = bison -y
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv -f
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
    FILEMANSUFFIX = 5x
            TROFF = psroff
            NROFF = nroff
         MSMACROS = -ms
        MANMACROS = -man
              TBL = tbl
              EQN = eqn
             NEQN = neqn
              COL = col

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional -Dlinux -D__i386__ -D_POSIX_SOURCE -D_BSD_SOURCE -D_SVID_SOURCE -DX_LOCALE
      STD_DEFINES = -Dlinux -D__i386__ -D_POSIX_SOURCE -D_BSD_SOURCE -D_SVID_SOURCE -DX_LOCALE
 EXTRA_LOAD_FLAGS = -Wl,-rpath,$(SHLIBDIR)
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS = -shared

         PICFLAGS = -fPIC

      CXXPICFLAGS = -fPIC

    PROTO_DEFINES = -DFUNCPROTO=15 -DNARROWPROTO

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4711
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4711

      PROJECTROOT = /usr/X11R6

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O2 -fno-strength-reduce -m486
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = $(CC)

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

# Not sure this belongs here
         TKLIBDIR = /usr/local/lib
         TKINCDIR = /usr/local/include
        TKLIBNAME = tk4.2
        TKLIBRARY = -ltk4.2
        TCLLIBDIR = /usr/local/lib
        TCLINCDIR = /usr/local/include
       TCLLIBNAME = tcl7.6
       TCLLIBRARY = -ltcl7.6

        MACROFILE = linux.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl 			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) 			$(IRULESRC)/xfree86.cf $(IRULESRC)/xf86.rules $(IRULESRC)/xf86site.def $(IRULESRC)/host.def $(EXTRA_ICONFIGFILES)

# ----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $XConsortium: Project.tmpl /main/r61_main/6 1996/01/15 12:26:59 gildea $
# $XFree86: xc/config/cf/Project.tmpl,v 3.34 1996/10/03 08:28:05 dawes Exp $

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

           BINDIR = /usr/X11R6/bin
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
      BUILDLIBDIR = $(TOP)/usrlib
      BUILDLIBTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
        XDMVARDIR = $(VARLIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           XSMDIR = $(LIBDIR)/xsm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(LIBDIR)/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = rgb
            FONTC = bdftopcf
        MKFONTDIR = mkfontdir

       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/programs/Xserver
       CONTRIBSRC = $(TOP)/../contrib
   UNSUPPORTEDSRC = $(TOP)/unsupported
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(TOP)/include/fonts
        EXTINCSRC = $(TOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

# $XConsortium: lnxLib.tmpl,v 1.5 95/01/11 21:44:44 kaleb Exp $
# $XFree86: xc/config/cf/lnxLib.tmpl,v 3.9 1996/02/24 04:32:52 dawes Exp $

          XLIBSRC = $(LIBSRC)/X11

SOXLIBREV = 6.1
DEPXONLYLIB =
XONLYLIB =  -lX11

LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

SOXEXTREV = 6.1
DEPXEXTLIB =
XEXTLIB =  -lXext

LINTXEXT = $(LINTLIBDIR)/llib-lXext.ln

    XSSLIBSRC = $(LIBSRC)/Xss

DEPXSSLIB = $(USRLIBDIR)/libXss.a
XSSLIB =  -lXss

LINTXSS = $(LINTLIBDIR)/llib-lXss.ln

    XXF86MISCLIBSRC = $(LIBSRC)/Xxf86misc

DEPXXF86MISCLIB = $(USRLIBDIR)/libXxf86misc.a
XXF86MISCLIB =  -lXxf86misc

LINTXXF86MISC = $(LINTLIBDIR)/llib-lXxf86misc.ln

    XXF86VMLIBSRC = $(LIBSRC)/Xxf86vm

DEPXXF86VMLIB = $(USRLIBDIR)/libXxf86vm.a
XXF86VMLIB =  -lXxf86vm

LINTXXF86VM = $(LINTLIBDIR)/llib-lXxf86vm.ln

    XXF86DGALIBSRC = $(LIBSRC)/Xxf86dga

DEPXXF86DGALIB = $(USRLIBDIR)/libXxf86dga.a
XXF86DGALIB =  -lXxf86dga

LINTXXF86DGA = $(LINTLIBDIR)/llib-lXxf86dga.ln

     EXTENSIONLIB = $(XEXTLIB)
  DEPEXTENSIONLIB = $(DEPXEXTLIB)
    LINTEXTENSION = $(LINTXEXT)

 LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
XAUTHLIB =  -lXau

LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
XDMCPLIB =  -lXdmcp

LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

SOXMUREV = 6.0
DEPXMULIB =
XMULIB =  -lXmu

LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

DEPOLDXLIB = $(USRLIBDIR)/liboldX.a
OLDXLIB =  -loldX

LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln

       TOOLKITSRC = $(LIBSRC)/Xt

SOXTREV = 6.0
DEPXTOOLONLYLIB =
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       AWIDGETSRC = $(LIBSRC)/Xaw

SOXAWREV = 6.1
DEPXAWLIB =
XAWLIB =  -lXaw

LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln

         XILIBSRC = $(LIBSRC)/Xi

SOXINPUTREV = 6.0
DEPXILIB =
XILIB =  -lXi

LINTXI = $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

SOXTESTREV = 6.1
DEPXTESTLIB =
XTESTLIB =  -lXtst

LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

SOPEXREV = 6.0
DEPPEXLIB =
PEXLIB =  -lPEX5

LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln

        XIELIBSRC = $(LIBSRC)/XIE

SOXIEREV = 6.0
DEPXIELIB =
XIELIB =  -lXIE

LINTXIE = $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
PHIGSLIB =  -lphigs

LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

SOICEREV = 6.0
DEPICELIB =
ICELIB =  -lICE

LINTICE = $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

SOSMREV = 6.0
DEPSMLIB =
SMLIB =  -lSM

LINTSM = $(LINTLIBDIR)/llib-lSM.ln

         FSLIBSRC = $(LIBSRC)/FS

DEPFSLIB = $(USRLIBDIR)/libFS.a
FSLIB =  -lFS

LINTFS = $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB = $(USRLIBDIR)/libfont.a
FONTLIB =  -lfont

LINTFONT = $(LINTLIBDIR)/llib-lfont.ln

          XPMLIBSRC = $(LIBSRC)/Xpm

DEPXPMLIB = $(USRLIBDIR)/libXpm.a
XPMLIB =  -lXpm

LINTXPM = $(LINTLIBDIR)/llib-lXpm.ln

    XKBFILELIBSRC = $(LIBSRC)/xkbfile

DEPXKBFILELIB = $(USRLIBDIR)/libxkbfile.a
XKBFILELIB =  -lxkbfile

LINTXKBFILE = $(LINTLIBDIR)/llib-lxkbfile.ln

     XKBCOMPCMD = xkbcomp

    XKBUILIBSRC = $(LIBSRC)/xkbui

DEPXKBUILIB = $(USRLIBDIR)/libxkbui.a
XKBUILIB =  -lxkbui

LINTXKBUI = $(LINTLIBDIR)/llib-lxkbui.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

XMULIBONLY = -lXmu
XMULIB = $(XMULIBONLY) $(XTOOLLIB) $(XLIB)

        CONFIGDIR = $(LIBDIR)/config

# ----------------------------------------------------------------------
# start of Imakefile

# Copyright (c) Mark J. Kilgard, 1994, 1997, 1998.
# Glut.cf - GLUT distribution Imakefile configuration info

EXTRA_INCLUDES = -I$(TOP)/include

GLUT_DEPLIBS = $(DEPGLUT) $(DEPXMULIB) $(DEPXLIB)
GLUT_LIBS = $(GLUT) $(GLU) $(OPENGL) $(XMULIB) $(XLIB) -lm
OPENGL = -lGL
GLU = -lGLU
INVENTOR = -lInventor
GLUT_DEPLIBS = $(DEPGLUT) $(DEPXMULIB) $(DEPXILIB) $(DEPXLIB)
GLUT_LIBS = $(GLUT) $(GLU) $(OPENGL) $(XMULIB) $(XILIB) $(XLIB) -lm
MUI_DEPLIBS = $(DEPMUI) $(DEPGLUT) $(DEPXMULIB) $(DEPXILIB) $(DEPXLIB)
MUI_LIBS = $(MUI) $(GLUT) $(GLU) $(OPENGL) $(XMULIB) $(XILIB) $(XLIB) -lm
GLE_DEPLIBS = $(DEPGLE) $(DEPGLUT) $(DEPXMULIB) $(DEPXILIB) $(DEPXLIB)
GLE_LIBS = $(GLE) $(GLUT) $(GLU) $(OPENGL) $(XMULIB) $(XILIB) $(XLIB) -lm
GLSMAP_DEPLIBS = $(DEPGLSMAP) $(DEPGLUT) $(DEPXMULIB) $(DEPXILIB) $(DEPXLIB)
GLSMAP_LIBS = $(GLSMAP) $(GLUT) $(GLU) $(OPENGL) $(XMULIB) $(XILIB) $(XLIB) -lm

DEPGLUT = $(TOP)/lib/glut/libglut.a
GLUT = $(TOP)/lib/glut/libglut.a

DEPMUI = $(TOP)/lib/mui/libmui.a
MUI = $(TOP)/lib/mui/libmui.a
DEPGLE = $(TOP)/lib/gle/libgle.a
GLE = $(TOP)/lib/gle/libgle.a
DEPGLSMAP = $(TOP)/lib/glsmap/libglsmap.a
GLSMAP = $(TOP)/lib/glsmap/libglsmap.a

CXXEXTRA_INCLUDES = -I/usr/include/CC $(EXTRA_INCLUDES)
GLUT_INVENTOR_DEPLIBS = $(GLUT_DEPLIBS)
GLUT_INVENTOR_LIBS = $(INVENTOR) $(GLUT_LIBS)

# end Glut.cf - GLUT distribution Imakefile configuration info

MANDIR = $(LIBMANDIR)
MANSUFFIX = $(LIBMANSUFFIX)glut

all:
	@echo 'The default rule in GLUT API man page Makefile is a no-op.'
	@echo 'Try "make install.man" to build and install man pages.'

install.man:: glutAddMenuEntry.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutAddMenuEntry.man $(DESTDIR)$(MANDIR)/glutAddMenuEntry.$(MANSUFFIX)

install.man:: glutAddSubMenu.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutAddSubMenu.man $(DESTDIR)$(MANDIR)/glutAddSubMenu.$(MANSUFFIX)

install.man:: glutAttachMenu.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutAttachMenu.man $(DESTDIR)$(MANDIR)/glutAttachMenu.$(MANSUFFIX)

install.man:: glutBitmapCharacter.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutBitmapCharacter.man $(DESTDIR)$(MANDIR)/glutBitmapCharacter.$(MANSUFFIX)

install.man:: glutBitmapWidth.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutBitmapWidth.man $(DESTDIR)$(MANDIR)/glutBitmapWidth.$(MANSUFFIX)

install.man:: glutButtonBoxFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutButtonBoxFunc.man $(DESTDIR)$(MANDIR)/glutButtonBoxFunc.$(MANSUFFIX)

install.man:: glutChangeToMenuEntry.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutChangeToMenuEntry.man $(DESTDIR)$(MANDIR)/glutChangeToMenuEntry.$(MANSUFFIX)

install.man:: glutChangeToSubMenu.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutChangeToSubMenu.man $(DESTDIR)$(MANDIR)/glutChangeToSubMenu.$(MANSUFFIX)

install.man:: glutCopyColormap.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutCopyColormap.man $(DESTDIR)$(MANDIR)/glutCopyColormap.$(MANSUFFIX)

install.man:: glutCreateMenu.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutCreateMenu.man $(DESTDIR)$(MANDIR)/glutCreateMenu.$(MANSUFFIX)

install.man:: glutCreateSubWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutCreateSubWindow.man $(DESTDIR)$(MANDIR)/glutCreateSubWindow.$(MANSUFFIX)

install.man:: glutCreateWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutCreateWindow.man $(DESTDIR)$(MANDIR)/glutCreateWindow.$(MANSUFFIX)

install.man:: glutDestroyMenu.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutDestroyMenu.man $(DESTDIR)$(MANDIR)/glutDestroyMenu.$(MANSUFFIX)

install.man:: glutDestroyWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutDestroyWindow.man $(DESTDIR)$(MANDIR)/glutDestroyWindow.$(MANSUFFIX)

install.man:: glutDeviceGet.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutDeviceGet.man $(DESTDIR)$(MANDIR)/glutDeviceGet.$(MANSUFFIX)

install.man:: glutDialsFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutDialsFunc.man $(DESTDIR)$(MANDIR)/glutDialsFunc.$(MANSUFFIX)

install.man:: glutDisplayFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutDisplayFunc.man $(DESTDIR)$(MANDIR)/glutDisplayFunc.$(MANSUFFIX)

install.man:: glutEnterGameMode.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutEnterGameMode.man $(DESTDIR)$(MANDIR)/glutEnterGameMode.$(MANSUFFIX)

install.man:: glutEntryFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutEntryFunc.man $(DESTDIR)$(MANDIR)/glutEntryFunc.$(MANSUFFIX)

install.man:: glutEstablishOverlay.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutEstablishOverlay.man $(DESTDIR)$(MANDIR)/glutEstablishOverlay.$(MANSUFFIX)

install.man:: glutExtensionSupported.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutExtensionSupported.man $(DESTDIR)$(MANDIR)/glutExtensionSupported.$(MANSUFFIX)

install.man:: glutForceJoystickFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutForceJoystickFunc.man $(DESTDIR)$(MANDIR)/glutForceJoystickFunc.$(MANSUFFIX)

install.man:: glutFullScreen.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutFullScreen.man $(DESTDIR)$(MANDIR)/glutFullScreen.$(MANSUFFIX)

install.man:: glutGameModeGet.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutGameModeGet.man $(DESTDIR)$(MANDIR)/glutGameModeGet.$(MANSUFFIX)

install.man:: glutGameModeString.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutGameModeString.man $(DESTDIR)$(MANDIR)/glutGameModeString.$(MANSUFFIX)

install.man:: glutGet.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutGet.man $(DESTDIR)$(MANDIR)/glutGet.$(MANSUFFIX)

install.man:: glutGetColor.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutGetColor.man $(DESTDIR)$(MANDIR)/glutGetColor.$(MANSUFFIX)

install.man:: glutGetModifiers.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutGetModifiers.man $(DESTDIR)$(MANDIR)/glutGetModifiers.$(MANSUFFIX)

install.man:: glutIdleFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutIdleFunc.man $(DESTDIR)$(MANDIR)/glutIdleFunc.$(MANSUFFIX)

install.man:: glutIgnoreKeyRepeat.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutIgnoreKeyRepeat.man $(DESTDIR)$(MANDIR)/glutIgnoreKeyRepeat.$(MANSUFFIX)

install.man:: glutInit.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutInit.man $(DESTDIR)$(MANDIR)/glutInit.$(MANSUFFIX)

install.man:: glutInitDisplayMode.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutInitDisplayMode.man $(DESTDIR)$(MANDIR)/glutInitDisplayMode.$(MANSUFFIX)

install.man:: glutInitDisplayString.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutInitDisplayString.man $(DESTDIR)$(MANDIR)/glutInitDisplayString.$(MANSUFFIX)

install.man:: glutInitWindowPosition.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutInitWindowPosition.man $(DESTDIR)$(MANDIR)/glutInitWindowPosition.$(MANSUFFIX)

install.man:: glutJoystickFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutJoystickFunc.man $(DESTDIR)$(MANDIR)/glutJoystickFunc.$(MANSUFFIX)

install.man:: glutKeyboardFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutKeyboardFunc.man $(DESTDIR)$(MANDIR)/glutKeyboardFunc.$(MANSUFFIX)

install.man:: glutKeyboardUpFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutKeyboardUpFunc.man $(DESTDIR)$(MANDIR)/glutKeyboardUpFunc.$(MANSUFFIX)

install.man:: glutLayerGet.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutLayerGet.man $(DESTDIR)$(MANDIR)/glutLayerGet.$(MANSUFFIX)

install.man:: glutMainLoop.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutMainLoop.man $(DESTDIR)$(MANDIR)/glutMainLoop.$(MANSUFFIX)

install.man:: glutMenuStatusFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutMenuStatusFunc.man $(DESTDIR)$(MANDIR)/glutMenuStatusFunc.$(MANSUFFIX)

install.man:: glutMotionFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutMotionFunc.man $(DESTDIR)$(MANDIR)/glutMotionFunc.$(MANSUFFIX)

install.man:: glutMouseFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutMouseFunc.man $(DESTDIR)$(MANDIR)/glutMouseFunc.$(MANSUFFIX)

install.man:: glutOverlayDisplayFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutOverlayDisplayFunc.man $(DESTDIR)$(MANDIR)/glutOverlayDisplayFunc.$(MANSUFFIX)

install.man:: glutPopWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutPopWindow.man $(DESTDIR)$(MANDIR)/glutPopWindow.$(MANSUFFIX)

install.man:: glutPositionWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutPositionWindow.man $(DESTDIR)$(MANDIR)/glutPositionWindow.$(MANSUFFIX)

install.man:: glutPostOverlayRedisplay.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutPostOverlayRedisplay.man $(DESTDIR)$(MANDIR)/glutPostOverlayRedisplay.$(MANSUFFIX)

install.man:: glutPostRedisplay.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutPostRedisplay.man $(DESTDIR)$(MANDIR)/glutPostRedisplay.$(MANSUFFIX)

install.man:: glutRemoveMenuItem.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutRemoveMenuItem.man $(DESTDIR)$(MANDIR)/glutRemoveMenuItem.$(MANSUFFIX)

install.man:: glutRemoveOverlay.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutRemoveOverlay.man $(DESTDIR)$(MANDIR)/glutRemoveOverlay.$(MANSUFFIX)

install.man:: glutReportErrors.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutReportErrors.man $(DESTDIR)$(MANDIR)/glutReportErrors.$(MANSUFFIX)

install.man:: glutReshapeFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutReshapeFunc.man $(DESTDIR)$(MANDIR)/glutReshapeFunc.$(MANSUFFIX)

install.man:: glutReshapeWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutReshapeWindow.man $(DESTDIR)$(MANDIR)/glutReshapeWindow.$(MANSUFFIX)

install.man:: glutSetColor.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSetColor.man $(DESTDIR)$(MANDIR)/glutSetColor.$(MANSUFFIX)

install.man:: glutSetCursor.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSetCursor.man $(DESTDIR)$(MANDIR)/glutSetCursor.$(MANSUFFIX)

install.man:: glutSetKeyRepeat.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSetKeyRepeat.man $(DESTDIR)$(MANDIR)/glutSetKeyRepeat.$(MANSUFFIX)

install.man:: glutSetMenu.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSetMenu.man $(DESTDIR)$(MANDIR)/glutSetMenu.$(MANSUFFIX)

install.man:: glutSetWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSetWindow.man $(DESTDIR)$(MANDIR)/glutSetWindow.$(MANSUFFIX)

install.man:: glutSetWindowTitle.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSetWindowTitle.man $(DESTDIR)$(MANDIR)/glutSetWindowTitle.$(MANSUFFIX)

install.man:: glutShowOverlay.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutShowOverlay.man $(DESTDIR)$(MANDIR)/glutShowOverlay.$(MANSUFFIX)

install.man:: glutShowWindow.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutShowWindow.man $(DESTDIR)$(MANDIR)/glutShowWindow.$(MANSUFFIX)

install.man:: glutSolidCone.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidCone.man $(DESTDIR)$(MANDIR)/glutSolidCone.$(MANSUFFIX)

install.man:: glutSolidCube.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidCube.man $(DESTDIR)$(MANDIR)/glutSolidCube.$(MANSUFFIX)

install.man:: glutSolidDodecahedron.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidDodecahedron.man $(DESTDIR)$(MANDIR)/glutSolidDodecahedron.$(MANSUFFIX)

install.man:: glutSolidIcosahedron.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidIcosahedron.man $(DESTDIR)$(MANDIR)/glutSolidIcosahedron.$(MANSUFFIX)

install.man:: glutSolidOctahedron.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidOctahedron.man $(DESTDIR)$(MANDIR)/glutSolidOctahedron.$(MANSUFFIX)

install.man:: glutSolidSphere.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidSphere.man $(DESTDIR)$(MANDIR)/glutSolidSphere.$(MANSUFFIX)

install.man:: glutSolidTeapot.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidTeapot.man $(DESTDIR)$(MANDIR)/glutSolidTeapot.$(MANSUFFIX)

install.man:: glutSolidTetrahedron.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidTetrahedron.man $(DESTDIR)$(MANDIR)/glutSolidTetrahedron.$(MANSUFFIX)

install.man:: glutSolidTorus.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSolidTorus.man $(DESTDIR)$(MANDIR)/glutSolidTorus.$(MANSUFFIX)

install.man:: glutSpaceballButtonFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSpaceballButtonFunc.man $(DESTDIR)$(MANDIR)/glutSpaceballButtonFunc.$(MANSUFFIX)

install.man:: glutSpaceballMotionFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSpaceballMotionFunc.man $(DESTDIR)$(MANDIR)/glutSpaceballMotionFunc.$(MANSUFFIX)

install.man:: glutSpaceballRotateFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSpaceballRotateFunc.man $(DESTDIR)$(MANDIR)/glutSpaceballRotateFunc.$(MANSUFFIX)

install.man:: glutSpecialFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSpecialFunc.man $(DESTDIR)$(MANDIR)/glutSpecialFunc.$(MANSUFFIX)

install.man:: glutSpecialUpFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSpecialUpFunc.man $(DESTDIR)$(MANDIR)/glutSpecialUpFunc.$(MANSUFFIX)

install.man:: glutStrokeCharacter.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutStrokeCharacter.man $(DESTDIR)$(MANDIR)/glutStrokeCharacter.$(MANSUFFIX)

install.man:: glutStrokeWidth.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutStrokeWidth.man $(DESTDIR)$(MANDIR)/glutStrokeWidth.$(MANSUFFIX)

install.man:: glutSwapBuffers.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutSwapBuffers.man $(DESTDIR)$(MANDIR)/glutSwapBuffers.$(MANSUFFIX)

install.man:: glutTabletButtonFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutTabletButtonFunc.man $(DESTDIR)$(MANDIR)/glutTabletButtonFunc.$(MANSUFFIX)

install.man:: glutTabletMotionFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutTabletMotionFunc.man $(DESTDIR)$(MANDIR)/glutTabletMotionFunc.$(MANSUFFIX)

install.man:: glutTimerFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutTimerFunc.man $(DESTDIR)$(MANDIR)/glutTimerFunc.$(MANSUFFIX)

install.man:: glutUseLayer.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutUseLayer.man $(DESTDIR)$(MANDIR)/glutUseLayer.$(MANSUFFIX)

install.man:: glutVisibilityFunc.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutVisibilityFunc.man $(DESTDIR)$(MANDIR)/glutVisibilityFunc.$(MANSUFFIX)

install.man:: glutWarpPointer.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glutWarpPointer.man $(DESTDIR)$(MANDIR)/glutWarpPointer.$(MANSUFFIX)

install.man:: glut.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) glut.man $(DESTDIR)$(MANDIR)/glut.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidCone.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireCone; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidCube.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireCube; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidDodecahedron.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireDodecahedron; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidIcosahedron.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireIcosahedron; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidOctahedron.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireOctahedron; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidSphere.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireSphere; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidTeapot.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireTeapot; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidTetrahedron.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireTetrahedron; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSolidTorus.$(MANSUFFIX) > $${TMP}; \
	for i in glutWireTorus; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSetWindow.$(MANSUFFIX) > $${TMP}; \
	for i in glutGetWindow; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutPopWindow.$(MANSUFFIX) > $${TMP}; \
	for i in glutPushWindow; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutShowWindow.$(MANSUFFIX) > $${TMP}; \
	for i in glutHideWindow glutIconifyWindow; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSetWindowTitle.$(MANSUFFIX) > $${TMP}; \
	for i in glutSetIconTitle; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutShowOverlay.$(MANSUFFIX) > $${TMP}; \
	for i in glutHideOverlay; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutSetMenu.$(MANSUFFIX) > $${TMP}; \
	for i in glutGetMenu; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutAttachMenu.$(MANSUFFIX) > $${TMP}; \
	for i in glutDetachMenu; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutMotionFunc.$(MANSUFFIX) > $${TMP}; \
	for i in glutPassiveMotionFunc; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glut.$(MANSUFFIX) > $${TMP}; \
	for i in intro; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutBitmapWidth.$(MANSUFFIX) > $${TMP}; \
	for i in glutBitmapLength; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutStrokeWidth.$(MANSUFFIX) > $${TMP}; \
	for i in glutStrokeLength; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/glutEnterGameMode.$(MANSUFFIX) > $${TMP}; \
	for i in glutLeaveGameMode; do (set -x; \
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

depend::
	$(DEPEND) $(DEPENDFLAGS) -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
		$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::

# ----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

# ----------------------------------------------------------------------
# dependencies generated by makedepend

